<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: AngularJS | ni-blog]]></title>
  <link href="http://orihubon.com/blog/categories/angularjs/atom.xml" rel="self"/>
  <link href="http://orihubon.com/"/>
  <updated>2015-04-17T13:10:09+09:00</updated>
  <id>http://orihubon.com/</id>
  <author>
    <name><![CDATA[niku4i]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AngularJSことはじめ]]></title>
    <link href="http://orihubon.com/blog/2015/04/17/angularjs-1/"/>
    <updated>2015-04-17T12:27:00+09:00</updated>
    <id>http://orihubon.com/blog/2015/04/17/angularjs-1</id>
    <content type="html"><![CDATA[<p>仕事でAngularJSを使う機運が高まっているので素振り1日目。数時間Webブラウジングした結果のメモ。</p>

<!--more-->


<h4>メモ</h4>

<p>Webの情報、podcastから得た情報の個人的まとめ</p>

<ul>
<li>AnglarJSはJavascriptのフレームワーク</li>
<li>フルスタック</li>
<li>クライアントサイドMVW(Model, View and Whatever)</li>
<li>AnglarJS 現在のバージョンは 1.3.15, 今後 version 2が出る機運</li>
<li>他にはBackbone.js, React.js</li>
<li>HTMLタグを拡張 e.g. <code>&lt;html ng-app&gt;</code>, <code>&lt;input type="text" ng-model="yourName" placeholder="Enter a name here"&gt;</code> こういうの。ngなんとかという記述が沢山出てくる。</li>
<li>シングルWebページアプリケーション向き</li>
<li>業務アプリ、管理アプリなどCRUDなアプリに向いている</li>
<li>jQueryを使うとdom操作をつらつらと書く。コードが大きくなって後から読めなくなる。AnglarJSだとコード量少なく書ける</li>
<li>SEOに向かないらしい。ボットアクセスの時はPhantomJSでサーバサイドでhtml生成して返すといったことをやってる人がいる。</li>
<li>SEOが重要なサイトには使わないという割りきってもいい、という人もいる</li>
<li>フルスタックゆえか学習コストは高い</li>
<li>例えばサーバサイドをRailsで作る場合、2パターンのアプローチが取れる

<ul>
<li>RailsでAnglarJSのコードを含んだhtmlレンダリングして、クライアントサイドでAngularJSを使う</li>
<li>もしくはRailsはXHRのAPIとして、ビジネスロジックとビューのレンダリングはAnglarJSに任せる</li>
<li>アプリ化を見据えている人は後者のアプローチをとっているみたい</li>
<li>(個人的にはRailsの恩恵を受けたいのでサーバサイドで一定のロジックを作りたい)</li>
<li>Rails + AngularJSの例はここを見るとよさそう<a href="https://github.com/mkwiatkowski/todo-rails4-angularjs">kwiatkowski/todo-rails4-angularjs</a></li>
</ul>
</li>
<li>jQueryプラグインと一緒に使うとハマるかも</li>
<li>困ったときはStackoverflow</li>
<li>レガシーブラウザサポートはしてない</li>
</ul>


<h4>Podcasts</h4>

<p>通勤の途中で聞いたpodcast。とても分かりやすい。</p>

<ul>
<li><a href="http://wada.fm/ep024/">wada.fm 24. AngularJSの功罪</a></li>
<li><a href="http://mozaic.fm/post/87393804788/3-angular-js">mozaic.fm #3 Angular.js</a></li>
</ul>


<h4>学習</h4>

<p>これから読む。</p>

<ul>
<li><a href="https://angularjs.org/">official</a></li>
<li><a href="http://angularjsninja.com/">AngularJS Ninja</a></li>
<li><a href="https://egghead.io/">Egghead.io</a></li>
<li><a href="http://js.studio-kingdom.com/angularjs">AnguarJS日本語リファレンス</a></li>
<li><a href="https://github.com/mgechev/angularjs-style-guide/blob/master/README-ja-jp.md">AnguarJS StyleGuide(JA)</a></li>
<li><a href="http://weblogs.asp.net/dwahlin/video-tutorial-angularjs-fundamentals-in-60-ish-minutes">Video Tutorial: AngularJS Fundamentals in 60-ish Minutes</a></li>
<li><a href="http://toddmotto.com/ultimate-guide-to-learning-angular-js-in-one-day/">Ultimate guide to learning AngularJS in one day</a></li>
<li><a href="http://www.oreilly.co.jp/books/9784873116679/">AngularJSアプリケーション開発ガイド(O'REILLY)</a></li>
</ul>


<h4>その他</h4>

<ul>
<li><a href="http://ionicframework.com/">ionic</a> スマフォのハイブリッドアプリをAngularJSで書ける。ionicが吐くjsを見て勉強する、というやり方もあるようだ。</li>
</ul>


<h4>まとめ</h4>

<p>クライアントサイドエンジニアリング力の低い自分としてはとっても新鮮でした。</p>
]]></content>
  </entry>
  
</feed>
