<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Redis | ni-blog]]></title>
  <link href="http://orihubon.com/blog/categories/redis/atom.xml" rel="self"/>
  <link href="http://orihubon.com/"/>
  <updated>2014-10-05T19:49:37-07:00</updated>
  <id>http://orihubon.com/</id>
  <author>
    <name><![CDATA[niku4i]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Redisクライアントでforkするときは子プロセスでrecoonectする]]></title>
    <link href="http://orihubon.com/blog/2013/12/11/reconnect-after-fork-redis-client-ruby/"/>
    <updated>2013-12-11T16:24:00-08:00</updated>
    <id>http://orihubon.com/blog/2013/12/11/reconnect-after-fork-redis-client-ruby</id>
    <content type="html"><![CDATA[<p>Redisクライアントインスタンスを親プロセスで作った後、forkし子プロセス側でGETとSETしても大丈夫だっけ? とおもったのでRubyの<a href="https://github.com/redis/redis-rb">redis-rb</a>で実験しました。結論としてはfork後に子プロセス側でクローズして再確立すれば良いです。</p>

<!-- more -->


<p>以下のケースは動かない。
``` ruby bad case
require &lsquo;redis&rsquo;</p>

<p>redis = Redis.new
redis.get &lsquo;a&rsquo;       # 親プロセスがRedisサーバとコネクション確立</p>

<p>fork do
  redis.get &lsquo;a&rsquo;     # 子プロセスがgetしようとすると&hellip;
end
```</p>

<p>例外が発生。子プロセスからコネクションを利用しようとしたので怒られる。</p>

<pre><code>=&gt; ..snip.. redis/client.rb:285:in `ensure_connected': Tried to use a connection from a child process without reconnecting. You need to reconnect to Redis after forking. (Redis::InheritedError)
</code></pre>

<p>fork後にreconnectするように言われるのでそのとおりします。以下はOKです。</p>

<p>``` ruby works!
require &lsquo;redis&rsquo;</p>

<p>redis = Redis.new
redis.get &lsquo;a&rsquo;</p>

<p>fork do
  redis.client.reconnect
  redis.get &lsquo;a&rsquo;
end
```</p>

<p>上のコードではTCPを使うのでtcpdumpでパケットを確認してみたところ、子は自分用のTCPコネクションを確立することを確認しました。</p>

<p>昔々Cでforkしてsocket read/writeするプログラムを書いたのを思い出しました。forkした後に複数プロセスで同じソケットを使ってはいけないので片方はクローズする、であってますかね。以上です!</p>
]]></content>
  </entry>
  
</feed>
