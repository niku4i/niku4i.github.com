<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | ni-blog]]></title>
  <link href="http://orihubon.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://orihubon.com/"/>
  <updated>2015-08-19T15:35:26+09:00</updated>
  <id>http://orihubon.com/</id>
  <author>
    <name><![CDATA[niku4i]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Naginataという複数NagiosをSSH経由で操作するCLIツールを作りました]]></title>
    <link href="http://orihubon.com/blog/2015/04/06/naginata/"/>
    <updated>2015-04-06T12:22:00+09:00</updated>
    <id>http://orihubon.com/blog/2015/04/06/naginata</id>
    <content type="html"><![CDATA[<p><a href="http://github.com/niku4i/naginata">Naginata</a>という複数NagiosをSSH経由で操作するCLIツールを作りました。</p>

<!--more-->


<p>Nagiosの画面から一度に沢山のサービスに対して通知をOFFにしたり、監視開始したりするオペレーションは結構面倒です。</p>

<p>Nagiosには<a href="http://old.nagios.org/developerinfo/externalcommands/commandlist.php">External Commands</a>という仕組みがあり、nagiosのweb画面上で行える操作をCLI上でも行える仕組みが備わっています。例えば以下のコマンドをNagiosホスト上で実行すると通知OFFすることができます。</p>

<p><code>
echo "[1428291034] DISABLE_SVC_NOTIFICATIONS;host1;service1" &gt; /var/spool/nagios/cmd/nagios.cmd
</code></p>

<p>CGIの画面にアクセスしなくてよくこの仕組みはとても便利ですがNagiosサーバにログインする手間があります。またもし複数のNagiosサーバを管理している場合、Nagiosサーバそれぞれでオペレーションするのは面倒です。</p>

<p>そこで1つのマシンから複数Nagiosサーバに対してSSH越しに上のコマンドを実行するCLIツールを作ればいいんじゃないか、ということで作ったのが<a href="http://github.com/niku4i/naginata">Naginata</a>です。複数監視対象を複数nagiosサーバ横断的に通知OFFにしたりすることが1コマンドで出来るツールになってます。</p>

<h3>使い方</h3>

<h4>インストール</h4>

<p>SSH接続元となるホストにnaginataをインストールします。</p>

<p><code>
$ gem install naginata
</code></p>

<p><code>naginata</code>コマンドがインストールされるので、以下のように設定ファイルを作ります。</p>

<p><code>
$ naginata init
</code></p>

<p>カレントディレクトリにNaginatafileというのが出来ます。管理対象のnagiosサーバを書いてください。</p>

<p>以下設定例です</p>

<p>```</p>

<h1>管理対象のnagiosサーバを書く</h1>

<h1>ログイン先のユーザ名が異なる場合はfoo@のようにユーザ名も指定する</h1>

<p>nagios_server &lsquo;<a href="&#x6d;&#x61;&#105;&#x6c;&#x74;&#111;&#x3a;&#102;&#111;&#111;&#x40;&#x6e;&#x61;&#103;&#105;&#111;&#x73;&#x31;&#46;&#101;&#x78;&#97;&#109;&#112;&#x6c;&#101;&#46;&#x63;&#111;&#109;">&#102;&#x6f;&#x6f;&#x40;&#x6e;&#97;&#x67;&#105;&#111;&#x73;&#x31;&#46;&#101;&#120;&#97;&#109;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#x6d;</a>&rsquo;
nagios_server &lsquo;<a href="&#x6d;&#97;&#105;&#x6c;&#116;&#x6f;&#x3a;&#98;&#97;&#x72;&#x40;&#x6e;&#97;&#x67;&#105;&#111;&#115;&#x32;&#x2e;&#101;&#x78;&#97;&#109;&#x70;&#x6c;&#x65;&#46;&#99;&#x6f;&#109;">&#x62;&#97;&#x72;&#64;&#110;&#x61;&#x67;&#x69;&#111;&#x73;&#50;&#x2e;&#101;&#120;&#x61;&#109;&#x70;&#x6c;&#x65;&#46;&#x63;&#111;&#109;</a>&rsquo;
nagios_server &lsquo;<a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#x6f;&#x3a;&#98;&#x61;&#122;&#x40;&#x6e;&#97;&#103;&#105;&#x6f;&#115;&#51;&#46;&#101;&#120;&#97;&#x6d;&#x70;&#x6c;&#101;&#46;&#99;&#x6f;&#x6d;">&#98;&#97;&#122;&#64;&#110;&#97;&#x67;&#105;&#111;&#115;&#51;&#x2e;&#x65;&#120;&#x61;&#109;&#x70;&#108;&#101;&#x2e;&#99;&#111;&#109;</a>&rsquo;</p>

<h1>Global nagios server options</h1>

<h1>nagios_serverのファイルパスを指定する</h1>

<h1>またrun_command_as: には nagios.cmd に書き込む時の</h1>

<h1>ユーザ名を指定する</h1>

<p>set :nagios_server_options, {
  command_file: &lsquo;/usr/local/nagios/var/rw/nagios.cmd&rsquo;,
  status_file: &lsquo;/usr/local/nagios/var/status.cmd&rsquo;,
  run_command_as: &lsquo;nagios&rsquo;,
}</p>

<h1>Global SSH options</h1>

<h1>SSHの秘密鍵を指定する</h1>

<p>set :ssh_options, {
  keys: %w(/home/nikushi/.ssh/id_rsa),
}</p>

<h1>nagiosサーバでsudoするのでpty trueにしておく</h1>

<p>set :pty, true
```</p>

<p>セットアップは以上です。nagiosサーバ側にはrubyやnaginataをインストールする必要はありません。</p>

<h4>通知を止める,有効にする</h4>

<p>例として全nagiosサーバ上の全ホストのPINGとSSHの監視の通知を止めてみます。動作を確かめるため<code>-v (--verbose)</code>オプションを付けて実行してます。</p>

<p><code>ruby
$ naginata notification --all-hosts  --disable  --services PING,SSH -v
..snip..
Following notifications will be disabled
localhost
  - PING
  - SSH
redis01.tokyo.local
  - PING
  - SSH
web01.tokyo.local
  - PING
  - SSH
localhost
  - PING
  - SSH
redis01.osaka.local
  - PING
  - SSH
web01.osaka.local
  - PING
  - SSH
Are you sure? [y|N] y
INFO [71871262] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;localhost;PING" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios1
INFO [48a76239] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;localhost;PING" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios0
INFO [71871262] Finished in 0.017 seconds with exit status 0 (successful).
INFO [ef4827b7] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;localhost;SSH" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios1
INFO [48a76239] Finished in 0.017 seconds with exit status 0 (successful).
INFO [4ffe6eb6] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;localhost;SSH" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios0
INFO [ef4827b7] Finished in 0.021 seconds with exit status 0 (successful).
INFO [7ee77545] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;redis01.osaka.local;PING" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios1
INFO [4ffe6eb6] Finished in 0.022 seconds with exit status 0 (successful).
INFO [2ef43042] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;redis01.tokyo.local;PING" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios0
INFO [2ef43042] Finished in 0.017 seconds with exit status 0 (successful).
INFO [13b54c30] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;redis01.tokyo.local;SSH" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios0
INFO [7ee77545] Finished in 0.022 seconds with exit status 0 (successful).
INFO [de883201] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;redis01.osaka.local;SSH" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios1
INFO [13b54c30] Finished in 0.018 seconds with exit status 0 (successful).
INFO [13f9ce6c] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;web01.tokyo.local;PING" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios0
INFO [de883201] Finished in 0.017 seconds with exit status 0 (successful).
INFO [5458ec38] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;web01.osaka.local;PING" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios1
INFO [13f9ce6c] Finished in 0.023 seconds with exit status 0 (successful).
INFO [5458ec38] Finished in 0.021 seconds with exit status 0 (successful).
INFO [be16e918] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;web01.tokyo.local;SSH" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios0
INFO [6247dc33] Running /usr/bin/env echo "[1428296330] DISABLE_SVC_NOTIFICATIONS;web01.osaka.local;SSH" &gt; /var/spool/nagios/cmd/nagios.cmd on nagios1
INFO [be16e918] Finished in 0.020 seconds with exit status 0 (successful).
INFO [6247dc33] Finished in 0.021 seconds with exit status 0 (successful).
Done
</code></p>

<p>なお、naginataは強力なフィルタ機能を持っています。上の例は全ホスト対象にしましたが引数にホスト名を指定すると対象ホストを限定できます。</p>

<p>また、ホスト名やサービス名は部分一致の挙動のため一部だけ指定することもできます。grepコマンドの引数のイメージです。また複数指定も出来ます。</p>

<p><code>
$ naginata notification osaka.local tokyo --enable --services Lo,PI
Following notifications will be enabled
redis01.tokyo.local
  - Load
  - PING
web01.tokyo.local
  - Load
  - PING
redis01.osaka.local
  - Load
  - PING
web01.osaka.local
  - Load
  - PING
Are you sure? [y|N] y
Done
</code></p>

<p>正規表現もできる</p>

<p><code>
$ naginata notification ^web  --enable --services 'd$'
Following notifications will be enabled
web01.tokyo.local
  - Load
web01.osaka.local
  - Load
Are you sure? [y|N] y
Done
</code></p>

<p>また、例は割愛しますが<code>--nagios</code>オプションで対象nagiosサーバを限定できます。</p>

<h4>ステータス確認</h4>

<p>元々External Command実行フレームワークにする作りをしていましたが、作っていく途中で監視ステータスや通知OFFされているかどうかを確認出来た方がいいなということになって作ってみました。</p>

<p>以下の例ではサービス一覧を複数Nagiosサーバから取得して現在の状態を表示してます。便利、でしょうか?。こちらも上述のフィルタが使えます。</p>

<p><code>
$ naginata services -a
NAGIOS   HOST                 SERVICE          STATUS   FLAGS  OUTPUT
nagios0  localhost            HTTP             WARNING  AC,nt  HTTP WARNING: HTTP/1.1 403 Forbidden - 5152 bytes in 0.001 second response time
nagios0  localhost            Current Load     OK       AC,NT  OK - load average: 0.00, 0.00, 0.00
nagios0  localhost            PING             OK       AC,NT  PING OK - Packet loss = 0%, RTA = 0.04 ms
nagios0  redis01.tokyo.local  Load             CRITICAL AC,NT  Too high load average 15
nagios0  redis01.tokyo.local  PING             OK       ac,NT  PING OK - Packet loss = 0%, RTA = 0.04 ms
nagios0  redis01.tokyo.local  SSH              OK       AC,NT  SSH OK - OpenSSH_5.3 (protocol 2.0)
nagios0  web01.tokyo.local    Load             OK       AC,NT  OK - load average: 0.01, 0.00, 0.00
nagios0  web01.tokyo.local    PING             OK       AC,NT  PING OK - Packet loss = 0%, RTA = 0.04 ms
nagios0  web01.tokyo.local    SSH              OK       AC,NT  SSH OK - OpenSSH_5.3 (protocol 2.0)
nagios1  redis01.osaka.local  Load             OK       AC,NT  OK - load average: 0.00, 0.00, 0.00
nagios1  redis01.osaka.local  PING             OK       AC,NT  PING OK - Packet loss = 0%, RTA = 0.04 ms
nagios1  redis01.osaka.local  SSH              OK       AC,NT  SSH OK - OpenSSH_5.3 (protocol 2.0)
</code></p>

<p>FLAGSという列に見慣れぬ文字列が入ってますが</p>

<ul>
<li>AC = Active Check enabled</li>
<li>ac = active check disabled</li>
<li>NT = NoTification disabled</li>
<li>nt = notification disabled</li>
</ul>


<p>という意味になってます。</p>

<h3>制約など</h3>

<ul>
<li>nagiosサーバにはSSHでパスフレーズ無しでログインできる前提です</li>
<li>SSHログイン後nagios.cmdに書き込める権限があるユーザか、もしくはSSHログイン後にsudoできるユーザ必要があります</li>
</ul>


<h3>その他</h3>

<p><a href="https://github.com/niku4i/naginata/tree/master/integration-test">naginata/tree/master/integration-test</a>にVagrantファイルとサンプルの設定ファイルを置いてるのでVagrantがインストールされたMacがあれば動作をお手軽に試せます。vagrant upすると仮想マシンにnagiosをインストールした状態で上がってきます。</p>

<p><code>
$ gem install naginata
$ git clone https://github.com/niku4i/naginata.git
$ cd naginata/integration-test
$ vagrant up
</code></p>

<p>つづいて/etc/hostsに以下2行を追記する</p>

<p><code>
127.0.0.1       nagios0
127.0.0.1       nagios1
</code></p>

<p>これで動作確認できるとおもいます!</p>

<p><code>
$ naginata services -a
</code></p>

<p>また <a href="http://localhost:8880">http://localhost:8880</a> , <a href="http://localhost:8881">http://localhost:8881</a> で仮想マシン側のnagios画面見れます。</p>

<h3>ToDo</h3>

<ul>
<li>現状notificationのon/offのみ対応。その他のコマンドへの対応。</li>
<li>ステータスに色を付ける</li>
<li>高速化。現状サービス数、nagiosサーバ数が多くなるとそれなりに遅い。</li>
</ul>


<h3>Updates</h3>

<h4>2015/08/05 v0.1.6</h4>

<p>任意のディレクトリにNaginatafileを置けるようになりました(以前のバージョンではカレントディレクトリにNaginatafile置く必要がありました)</p>

<ul>
<li>./Naginatafile, ~/.naginata/Naginatafile, /etc/naginata/Naginatafileの順にファイルを探すよう修正</li>
<li>&mdash;naginatafileオプション、もしくはNAGINATAFILE環境変数にて任意のパスを指定可能</li>
</ul>


<h3>まとめ</h3>

<p><a href="http://github.com/niku4i/naginata">Naginata</a>という複数NagiosをSSH経由で操作するCLIツールを作った。</p>

<p>ぜひ使ってみてください!!</p>
]]></content>
  </entry>
  
</feed>
