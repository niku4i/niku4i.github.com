<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | ni-blog]]></title>
  <link href="http://orihubon.com/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://orihubon.com/"/>
  <updated>2014-03-22T13:33:50+09:00</updated>
  <id>http://orihubon.com/</id>
  <author>
    <name><![CDATA[niku4i]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ActiveSupportのin_groups_ofメソッドでビューが捗る!]]></title>
    <link href="http://orihubon.com/blog/2013/09/26/in-groups-of-activesupport-extention/"/>
    <updated>2013-09-26T19:21:00+09:00</updated>
    <id>http://orihubon.com/blog/2013/09/26/in-groups-of-activesupport-extention</id>
    <content type="html"><![CDATA[<p>ActiveSupportの<code>inc_groups_of</code>メソッドを使ってみたらビューが捗った。</p>

<!--more-->


<p>Arrayクラス拡張であるin_groups_ofメソッドとin_groupsメソッドを使うと簡単に配列をグルーピング化することができます。</p>

<p>例えば、以下の配列データ
<code>ruby
%w(1, 2, 3, 4, 5, 6, 7, 8)
</code></p>

<p>in_groups_ofメソッドをつけて呼び出すと引数指定の数の要素数の小配列をメンバにした配列を返してくれます。また第2引数で空部分に埋める要素指定もできます。デフォルトはnilです。falseを与えるとnilの代わりに要素数を切り詰めます。</p>

<p>``` ruby
irb> %w(1 2 3 4 5 6 7 8).in_groups_of(2)
=> [[&ldquo;1&rdquo;, &ldquo;2&rdquo;], [&ldquo;3&rdquo;, &ldquo;4&rdquo;], [&ldquo;5&rdquo;, &ldquo;6&rdquo;], [&ldquo;7&rdquo;, &ldquo;8&rdquo;]]</p>

<p>irb> %w(1 2 3 4 5 6 7 8).in_groups_of(5)
=> [[&ldquo;1&rdquo;, &ldquo;2&rdquo;, &ldquo;3&rdquo;, &ldquo;4&rdquo;, &ldquo;5&rdquo;], [&ldquo;6&rdquo;, &ldquo;7&rdquo;, &ldquo;8&rdquo;, nil, nil]]</p>

<p>irb> %w(1 2 3 4 5 6 7 8).in_groups_of(5, &lsquo;none&rsquo;)
=> [[&ldquo;1&rdquo;, &ldquo;2&rdquo;, &ldquo;3&rdquo;, &ldquo;4&rdquo;, &ldquo;5&rdquo;], [&ldquo;6&rdquo;, &ldquo;7&rdquo;, &ldquo;8&rdquo;, &ldquo;none&rdquo;, &ldquo;none&rdquo;]]</p>

<p>irb> %w(1 2 3 4 5 6 7 8).in_groups_of(5, false)
=> [[&ldquo;1&rdquo;, &ldquo;2&rdquo;, &ldquo;3&rdquo;, &ldquo;4&rdquo;, &ldquo;5&rdquo;], [&ldquo;6&rdquo;, &ldquo;7&rdquo;, &ldquo;8&rdquo;]]
```</p>

<p>使うシーンとしては、ビュー上で指定個数毎でグルーピングして表示したいときに便利です。</p>

<p>``` html</p>

<div id="group0">
  <ul>
    <li>1</li>
    <li>2</li>
    <li>3</li>
  </ul>
</div>


<div id="group1">
  <ul>
    <li>4</li>
    <li>5</li>
    <li>6</li>
  </ul>
</div>


<div id="group2">
  <ul>
    <li>7</li>
    <li>8</li>
    <li>9</li>
  </ul>
</div>


<p>```</p>

<p>似たような名前でin_groupsというメソッドもあります。こちらは配列を指定グループ数に分割してくれるメソッドです。</p>

<p>``` ruby
irb> %w(1 2 3 4 5 6 7 8).in_groups(2)
=> [[&ldquo;1&rdquo;, &ldquo;2&rdquo;, &ldquo;3&rdquo;, &ldquo;4&rdquo;], [&ldquo;5&rdquo;, &ldquo;6&rdquo;, &ldquo;7&rdquo;, &ldquo;8&rdquo;]]</p>

<p>irb> %w(1 2 3 4 5 6 7 8).in_groups(3)
=> [[&ldquo;1&rdquo;, &ldquo;2&rdquo;, &ldquo;3&rdquo;], [&ldquo;4&rdquo;, &ldquo;5&rdquo;, &ldquo;6&rdquo;], [&ldquo;7&rdquo;, &ldquo;8&rdquo;, nil]]</p>

<p>irb> %w(1 2 3 4 5 6 7 8).in_groups(5)
=> [[&ldquo;1&rdquo;, &ldquo;2&rdquo;], [&ldquo;3&rdquo;, &ldquo;4&rdquo;], [&ldquo;5&rdquo;, &ldquo;6&rdquo;], [&ldquo;7&rdquo;, nil], [&ldquo;8&rdquo;, nil]]</p>

<p>irb> %w(1 2 3 4 5 6 7 8).in_groups(5, &ldquo;none&rdquo;)
=> [[&ldquo;1&rdquo;, &ldquo;2&rdquo;], [&ldquo;3&rdquo;, &ldquo;4&rdquo;], [&ldquo;5&rdquo;, &ldquo;6&rdquo;], [&ldquo;7&rdquo;, &ldquo;none&rdquo;], [&ldquo;8&rdquo;, &ldquo;none&rdquo;]]</p>

<p>irb> %w(1 2 3 4 5 6 7 8).in_groups(5, false)
=> [[&ldquo;1&rdquo;, &ldquo;2&rdquo;], [&ldquo;3&rdquo;, &ldquo;4&rdquo;], [&ldquo;5&rdquo;, &ldquo;6&rdquo;], [&ldquo;7&rdquo;], [&ldquo;8&rdquo;]]
```</p>

<p>普段Railsやってる人には当たり前かもしれない内容でした。いざ使いたかったときにメソッド名を忘れていたので、以上、自分メモでした!</p>

<p>他にもActiveSupportの拡張は便利なものがあるので<a href="http://edgeguides.rubyonrails.org/active_support_core_extensions.html">Active Support Core Extensions</a>の一読おすすめです!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Font AwesomeをRailsで使ってみた]]></title>
    <link href="http://orihubon.com/blog/2013/07/09/font-awesome-rails/"/>
    <updated>2013-07-09T00:42:00+09:00</updated>
    <id>http://orihubon.com/blog/2013/07/09/font-awesome-rails</id>
    <content type="html"><![CDATA[<p><a href="http://fortawesome.github.io/Font-Awesome/">Font Awesome</a></p>

<p>Bootstrap向けのicon系Webフォントを提供するライブラリ。</p>

<!--more-->


<p>Railsで使うには <a href="https://github.com/bokmann/font-awesome-rails">font-awesome-rails</a>をGemfileに書いて適切にimportすればOKです。</p>

<p>使い方1 &ndash; iタグ使う</p>

<pre><code>&lt;i class="icon-thumbs-up"&gt;&lt;/i&gt; icon-thumbs-up
</code></pre>

<p>TwitterBootstrapであらかじめ用意されているアイコンの使い方と同じです。ただFont Awesomeの場合、画像ではなくフォントとして扱われるのでfont-colorで色を調整したり出来ます。</p>

<p>使い方2 &ndash; CSSのcontentマークアップにユニコードを埋め込む</p>

<pre><code>.thumbs-up:before {
  font-size: 20px;
  font-family: 'FontAwesome';
  content: '\F164';
}
</code></pre>

<p>contentの値にユニコードをセットします。ユニコードの値は各アイコンの説明ページに小さく書かれてあります。たとえば<a href="http://fortawesome.github.io/Font-Awesome/icon/thumbs-up/">thumbs-up</a>であればF164をcontentの値にすればOK。また、font-familyにFontAwesomeを指定します。contentで埋め込めるので:beforeなどの疑似要素と組み合わせることでスタイルシートからアイコンをHTMLに埋め込むことも可能です!</p>

<p>という感じで簡単ながらFont Awesomeの紹介でした。</p>
]]></content>
  </entry>
  
</feed>
