<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | ni-blog]]></title>
  <link href="http://orihubon.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://orihubon.com/"/>
  <updated>2013-11-18T21:03:20+09:00</updated>
  <id>http://orihubon.com/</id>
  <author>
    <name><![CDATA[niku4i]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[KVMのrawフォーマットのイメージファイルをマウントする]]></title>
    <link href="http://orihubon.com/blog/2013/07/31/mount-kvm-os-image/"/>
    <updated>2013-07-31T15:49:00+09:00</updated>
    <id>http://orihubon.com/blog/2013/07/31/mount-kvm-os-image</id>
    <content type="html"><![CDATA[<p>rawフォーマット限定。</p>

<p>マウント
```</p>

<h1>losetup /dev/loop0 /data/vm/myserver.img</h1>

<h1>kpartx -av /dev/loop0</h1>

<h1>ls -alF /dev/mapper</h1>

<h1>mount /dev/mapper/loop0p1 /mnt</h1>

<p>```</p>

<p>アンマウント
```</p>

<h1>umount /mnt</h1>

<h1>kpartx -dv /dev/loop0</h1>

<h1>losetup -d /dev/loop0</h1>

<p>```</p>

<p>参考: <a href="http://d.hatena.ne.jp/okinaka/20091210/1260445130">KVMのイメージをマウントする その2</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[virt-installでvncサーバを立ち上げてCentOSをグラフィカルインストール]]></title>
    <link href="http://orihubon.com/blog/2013/07/29/install-centos-in-graphical-mode-via-vnc-server-and-virt-install/"/>
    <updated>2013-07-29T22:58:00+09:00</updated>
    <id>http://orihubon.com/blog/2013/07/29/install-centos-in-graphical-mode-via-vnc-server-and-virt-install</id>
    <content type="html"><![CDATA[<p>やっつけ感ある手順であるがこんな感じ。</p>

<p><code>
cd /data/vm
qemu-img create -f qcow2 server01.img 10G
virt-install -n server01 \
-r 1024 \
--disk path=/data/vm/server01.img,size=10,format=qcow2 \
--virt-type=kvm \
--vcpus=2 \
--os-type linux \
--os-variant=rhel6 \
--network bridge=br0 \
--graphics vnc,password=abc123,port=5910,keymap=us \
--cdrom=/var/tmp/CentOS-6.4-x86_64-minimal.iso
</code></p>

<p>さらに、virsh consoleでコンソールを取れるようにする。</p>

<p>```</p>

<h1>vi /et/grub.conf</h1>

<h1>splashimage=(hd0,0)/boot/grub/splash.xpm.gz  # この行は不要</h1>

<p>serial &mdash;unit=0 &mdash;speed=115200 # 追加
terminal &mdash;timeout=5 serial console # 追加
```</p>

<p>```</p>

<h1>echo ttyS0 >> /etc/securetty</h1>

<p>```</p>

<p>CentOS6の場合upstart経由で起動時にttyS0を自動起動してあげる必要がある。CentOS6.4最小インストール直後であればttyS0は自動起動してくれていた。以下のとおり確認しただけ。</p>

<p>起動しているか確認</p>

<p>```</p>

<h1>initctl list |grep serial</h1>

<p>serial (ttyS0) start/running, process 5091
```</p>

<p>設定ファイル
```</p>

<h1>vi /etc/init/serial.conf</h1>

<p>```</p>

<p>参考: <a href="http://lab.unicast.ne.jp/2013/02/15/%E4%BB%AE%E6%83%B3%E3%83%9E%E3%82%B7%E3%83%B3%E3%81%AB%E3%82%B7%E3%83%AA%E3%82%A2%E3%83%AB%E3%82%B3%E3%83%B3%E3%82%BD%E3%83%BC%E3%83%AB%E3%81%A7%E6%8E%A5%E7%B6%9A%E3%81%A7%E3%81%8D%E3%82%8B%E3%82%88/">仮想マシンにシリアルコンソールで接続できるよ</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[前日日付のファイル名でローテートし圧縮するlogrotateの設定例]]></title>
    <link href="http://orihubon.com/blog/2013/03/07/logrotate-as-compressed-and-previous-date-formatted-file-name/"/>
    <updated>2013-03-07T15:57:00+09:00</updated>
    <id>http://orihubon.com/blog/2013/03/07/logrotate-as-compressed-and-previous-date-formatted-file-name</id>
    <content type="html"><![CDATA[<p>logrotateでdateextを設定するとローテートしたファイルに日付を含めることができます。しかし、00:00-早朝のあたりでlogrotateを実行するとローテートされた内容は前日分のログなのに日付は実行時(今日)になりログの内容とファイル名の日付が乖離してしまいます。ファイル名を前日の日付でローテートする方法をメモします。</p>

<p><div><script src='https://gist.github.com/5105939.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>一部説明</p>

<pre><code>ifempty        # 空ファイルでもローテートする。
               # 過去ログを`ls | wc -l`などするときに
               # 日数と数を合わせたいので。
dateext        # ローテートしたファイルに実行時の日付を
               # 付ける。ただし、00:00以降にlogrotateを実行する
               # 場合は、ログ内容と日付が乖離するので別途
               # lastactionで日付を前日分に変えている。
extension .log # ローテート後のファイル名の場所の末尾に.log 
               # を持ってくる。 圧縮する場合は.log.gzになる。
               # 本オプション指定ない場合はapp.log-yyyymmdd となり
               # 微妙なので調整のため。
lastaction     # 最後に実行するコマンド
               # postrotateを使わないのはpostrotateはcompressする前
               # に実行されるため。compressしてlastactionが実行される。
</code></pre>
]]></content>
  </entry>
  
</feed>
