<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: SmokePing | ni-blog]]></title>
  <link href="http://orihubon.com/blog/categories/smokeping/atom.xml" rel="self"/>
  <link href="http://orihubon.com/"/>
  <updated>2015-04-19T12:48:39+09:00</updated>
  <id>http://orihubon.com/</id>
  <author>
    <name><![CDATA[niku4i]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SmokePingをPlack + Perlbrew + Alien::RRDtoolで動かす]]></title>
    <link href="http://orihubon.com/blog/2015/04/19/plackup-smokeping--with-perlbrew/"/>
    <updated>2015-04-19T11:45:00+09:00</updated>
    <id>http://orihubon.com/blog/2015/04/19/plackup-smokeping--with-perlbrew</id>
    <content type="html"><![CDATA[<p>SmokePingをApache+CGIではなくPlackだけで動かしてみた。</p>

<!--more-->


<p>以前書いた<a href="http://orihubon.com/blog/2013/02/18/install-smokeping/">SmokePingをインストールしてみた</a>という記事ではシステムPerl + Apache CGI + yumからrrdtool, rrdtoo-perlをインストールする方法でやったが、今回は違う方針で入れてみた。</p>

<p>やりたいこと</p>

<ul>
<li>システムPerlではなくperlbrewで入れたperlを使う</li>
<li>PlackでApache無しでWeb画面を立ち上げる</li>
</ul>


<p>なお、RRDToolをシステムのパッケージシステムからインストールしPerlで使おうとするとCentOSの場合、rrdtoolとrrdtool-perlを入れることになる。rrdtool-perlを使うにはシステムPerlを使わなければならず、今回やりたいperlbrew perlを使えない。そこでAlien::RRDtoolを使ってrrdtoolをbuildすることでRRDToolをperlbrew perlで使うことにした。Alien::RRDtoolは@gfxさんの<a href="http://perl-users.jp/articles/advent-calendar/2011/hacker/2">Alien::RRDtool &ndash; RRDtoolをCPANから入れる</a>が大変参考になる。</p>

<p>Plack化するためCGI::Emulate::PSGIを使う。</p>

<p>以下CentOS6での作業</p>

<h4>RRDToolのbuildに必要なパッケージを入れる</h4>

<p>```</p>

<h1>yum install cairo cairo-devel pango pango-devel libxml2-devel bitmap-console-fonts vlgothic-fonts vlgothic-fonts-common</h1>

<p>```</p>

<h4>PerlbrewでSmokePing用Perlをbuildする</h4>

<p>perlbrewの<code>--as</code>オプションを使ってperlを名前付きでインストールする。今回の作業で必須ではないが、perlのバージョンを上げたいときに普通にインストールするとshebangのパスを書き換えないといけないが、<code>--as</code>オプションを付けると変えなくて済むので便利。</p>

<p>まずsmokepingユーザを作成する</p>

<p>```</p>

<h1>groupadd smokeping</h1>

<h1>useradd smokeping -g smokeping</h1>

<h1>su &ndash; smokeping</h1>

<p>```</p>

<p>続いてperlbrewをsmokepingユーザ環境化に入れる</p>

<p><code>
$ \curl -L http://install.perlbrew.pl | bash
$ echo 'source $HOME/perl5/perlbrew/etc/bashrc' &gt;&gt; ~/.bashrc
$ source ~/.bashrc
</code></p>

<p>build
<code>
$ perl_version=5.20.2
$ perl_name=smokeping
$ perlbrew install $perl_version --as $perl_name  -j 4 -v
   =&gt; ~/perl5/perlbrew/perls/$perl_name にperlがインストールされる
</code></p>

<h4>SmokePingのsourceをダウンロード</h4>

<p>次のcpanmの工程で必要なので、まずsourceをダウンロードしておく</p>

<p><code>
$ wget http://oss.oetiker.ch/smokeping/pub/smokeping-2.6.11.tar.gz
$ tar zxf smokeping-2.6.11.tar.gz
$ cd smokeping-2.6.11
</code></p>

<h4>CPANモジュールインストール</h4>

<p>SmokePingが依存するCPANモジュール、 Alien::RRDtool、Plack関連モジュールをインストールする</p>

<p>まず、perlbrew perlを使ってまずcpanmを入れる</p>

<p><code>
$ perlbrew use $perl_name
$ curl -L https://cpanmin.us | perl - App::cpanminus
</code></p>

<p>続いてcpanmを使ってperlbrew perl以下にCPANモジュールをインストール</p>

<p><code>
$ cpanm Alien::RRDtool CGI::Emulate::PSGI Plack `cat PERL_MODULES`
</code></p>

<p>PERL_MODULESはSmokePingのsourceに含まれているファイルでインストールすべきモジュールリストが定義されているのでここでインストールしておく。</p>

<h4>SmokePingをインストール</h4>

<p>SmokePingを普通に./configure &ndash;> make &ndash;> make installするとシステムPerlを使おうとするので一工夫が必要で、configure時に<code>PERL</code>環境変数で使うperlを指定することが出来る。また<code>--enable-pkgonly</code>オプションを指定することでSmokePingのインストーラ自身がCPANモジュールをインストールするのを止めている。</p>

<p><code>
$ PERL=/home/smokeping/perl5/perlbrew/perls/smokeping/bin/perl
$ PERL=`ls $PERL` ./configure --prefix=/usr/local/SmokePing --enable-pkgonly
$ make
$ sudo /usr/bin/gmake install
$ sudo chown -R smokeping:smokeping /usr/local/SmokePing
</code></p>

<p>本当にperlbrew perlを使ってるかshebangを確認してみる</p>

<p>```
$ head -1  /usr/local/SmokePing/bin/smokeping</p>

<h1>!/home/smokeping/perl5/perlbrew/perls/smokeping/bin/perl</h1>

<p>$ head -1  /usr/local/SmokePing/bin/smokeping_cgi</p>

<h1>!/home/smokeping/perl5/perlbrew/perls/smokeping/bin/perl</h1>

<p>```</p>

<h4>plackupする</h4>

<p>準備は整ったのでsmokepinユーザでplackupしてみる。なお今回は/smokepingをSmokePingのrootにした。</p>

<p>まず、SmokePingの設定ファイルのうち以下の項目の修正が必要。</p>

<p><code>
imgcache = /usr/local/SmokePing/cache
imgurl   = /smokeping/cache
cgiurl   = http://localhost/smokeping/
</code></p>

<p>以下のapp.psgiを/usr/local/Smokeping/に置く。</p>

<p>```perl
use Plack::Builder;
use CGI::Emulate::PSGI;
use CGI qw();</p>

<p>use Smokeping;</p>

<p>use warnings;
use strict;</p>

<p>my $smokeping = sub {</p>

<pre><code>CGI::initialize_globals();
my $q = CGI-&gt;new;
# 適宜configは作成してください
Smokeping::cgi("/usr/local/Smokeping/etc/config", $q);
</code></pre>

<p>};
$smokeping  = CGI::Emulate::PSGI->handler( $smokeping );</p>

<p>builder {</p>

<pre><code>use Plack::App::File;
mount "/smokeping/cache" =&gt; Plack::App::File-&gt;new(root =&gt; './cache')-&gt;to_app;
mount "/smokeping/cropper" =&gt; Plack::App::File-&gt;new(root =&gt; './htdocs/cropper')-&gt;to_app;
mount "/smokeping" =&gt; $smokeping;
</code></pre>

<p>};
```</p>

<p>/cacheと/cropperはそれぞれ画像ファイルとjsファイルの参照のため。</p>

<p>plackup</p>

<p><code>
$ cd /usr/local/SmokePing
$ plackup
</code></p>

<p><a href="http://localhost:5000/smokeping">http://localhost:5000/smokeping</a> でweb画面が見れます!!!</p>

<p>あとはpingプロセスを立ち上げる。これもsmokepingユーザで動かす。別途fping等インストールしておく。</p>

<p><code>$ /var/app/SmokePing/bin/smokeping</code></p>

<h4>まとめ</h4>

<p>何がいいの? システムPerl使いたくない人向け。また管理画面なのでCGIでも十分ではあるけどApache立てずに動かしたい人には便利。</p>
]]></content>
  </entry>
  
</feed>
