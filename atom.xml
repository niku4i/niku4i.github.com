<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ni-blog]]></title>
  <link href="http://orihubon.com/atom.xml" rel="self"/>
  <link href="http://orihubon.com/"/>
  <updated>2015-04-17T13:14:50+09:00</updated>
  <id>http://orihubon.com/</id>
  <author>
    <name><![CDATA[niku4i]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AngularJSことはじめ]]></title>
    <link href="http://orihubon.com/blog/2015/04/17/angularjs-1/"/>
    <updated>2015-04-17T12:27:00+09:00</updated>
    <id>http://orihubon.com/blog/2015/04/17/angularjs-1</id>
    <content type="html"><![CDATA[<p>仕事でAngularJSを使う機運が高まっているので素振り1日目。数時間Webブラウジングしたメモ。</p>

<!--more-->


<h4>メモ</h4>

<p>Webの情報、podcastから得た今日の成果</p>

<ul>
<li>AngularJSはJavascriptのフレームワーク</li>
<li>フルスタック</li>
<li>クライアントサイドMVW(Model, View and Whatever)</li>
<li>AngularJS 現在のバージョンは 1.3.15, 今後 version 2が出る機運</li>
<li>他にはBackbone.js, React.js</li>
<li>HTMLタグを拡張 e.g. <code>&lt;html ng-app&gt;</code>, <code>&lt;input type="text" ng-model="yourName" placeholder="Enter a name here"&gt;</code> こういうの。ngなんとかという記述が沢山出てくる。</li>
<li>シングルWebページアプリケーション向き</li>
<li>業務アプリ、管理アプリなどCRUDなアプリに向いている</li>
<li>jQueryを使うとdom操作をつらつらと書く。コードが大きくなって後から読めなくなる。AngularJSだとコード量少なく書ける</li>
<li>SEOに向かないらしい。ボットアクセスの時はPhantomJSでサーバサイドでhtml生成して返すといったことをやってる人がいる。</li>
<li>SEOが重要なサイトには使わないという割りきってもいい、という人もいる</li>
<li>フルスタックゆえか学習コストは高い</li>
<li>例えばサーバサイドをRailsで作る場合、2パターンのアプローチが取れる

<ul>
<li>RailsでAngularJSのコードを含んだhtmlレンダリングして、クライアントサイドでAngularJSを使う</li>
<li>もしくはRailsはXHRのAPIとして、ビジネスロジックとビューのレンダリングはAngularJSに任せる</li>
<li>アプリ化を見据えている人は後者のアプローチをとっているみたい</li>
<li>(個人的にはRailsの恩恵を受けたいのでサーバサイドで一定のロジックを作りたい)</li>
<li>Rails + AngularJSの例はここを見るとよさそう<a href="https://github.com/mkwiatkowski/todo-rails4-angularjs">kwiatkowski/todo-rails4-angularjs</a></li>
</ul>
</li>
<li>jQueryプラグインと一緒に使うとハマるかも</li>
<li>困ったときはStackoverflow</li>
<li>レガシーブラウザサポートはしてない</li>
</ul>


<h4>Podcasts</h4>

<p>通勤の途中で聞いたpodcast。とても分かりやすい。</p>

<ul>
<li><a href="http://wada.fm/ep024/">wada.fm 24. AngularJSの功罪</a></li>
<li><a href="http://mozaic.fm/post/87393804788/3-angular-js">mozaic.fm #3 Angular.js</a></li>
</ul>


<h4>学習</h4>

<p>これから読む。</p>

<ul>
<li><a href="https://angularjs.org/">official</a></li>
<li><a href="http://angularjsninja.com/">AngularJS Ninja</a></li>
<li><a href="https://egghead.io/">Egghead.io</a></li>
<li><a href="http://js.studio-kingdom.com/angularjs">AnguarJS日本語リファレンス</a></li>
<li><a href="https://github.com/mgechev/angularjs-style-guide/blob/master/README-ja-jp.md">AnguarJS StyleGuide(JA)</a></li>
<li><a href="http://weblogs.asp.net/dwahlin/video-tutorial-angularjs-fundamentals-in-60-ish-minutes">Video Tutorial: AngularJS Fundamentals in 60-ish Minutes</a></li>
<li><a href="http://toddmotto.com/ultimate-guide-to-learning-angular-js-in-one-day/">Ultimate guide to learning AngularJS in one day</a></li>
<li><a href="http://www.oreilly.co.jp/books/9784873116679/">AngularJSアプリケーション開発ガイド(O&#8217;REILLY)</a></li>
</ul>


<h4>その他</h4>

<ul>
<li><a href="http://ionicframework.com/">ionic</a> スマフォのハイブリッドアプリをAngularJSで書ける。ionicが吐くjsを見て勉強する、というやり方もあるようだ。</li>
</ul>


<h4>まとめ</h4>

<p>まだコードは1行も書いてない。クライアントサイドエンジニアリング力の低い自分としてはとっても新鮮でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Naginataという複数NagiosをSSH経由で操作するCLIツールを作りました]]></title>
    <link href="http://orihubon.com/blog/2015/04/06/naginata/"/>
    <updated>2015-04-06T12:22:00+09:00</updated>
    <id>http://orihubon.com/blog/2015/04/06/naginata</id>
    <content type="html"><![CDATA[<p><a href="http://github.com/niku4i/naginata">Naginata</a>という複数NagiosをSSH経由で操作するCLIツールを作りました。</p>

<!--more-->


<p>Nagiosの画面から一度に沢山のサービスに対して通知をOFFにしたり、監視開始したりするオペレーションは結構面倒です。</p>

<p>Nagiosには<a href="http://old.nagios.org/developerinfo/externalcommands/commandlist.php">External Commands</a>という仕組みがあり、nagiosのweb画面上で行える操作をCLI上でも行える仕組みが備わっています。例えば以下のコマンドをNagiosホスト上で実行すると通知OFFすることができます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "[1428291034] DISABLE_SVC_NOTIFICATIONS;host1;service1" &gt; /var/spool/nagios/cmd/nagios.cmd</span></code></pre></td></tr></table></div></figure>


<p>CGIの画面にアクセスしなくてよくこの仕組みはとても便利ですがNagiosサーバにログインする手間があります。またもし複数のNagiosサーバを管理している場合、Nagiosサーバそれぞれでオペレーションするのは面倒です。</p>

<p>そこで1つのマシンから複数Nagiosサーバに対してSSH越しに上のコマンドを実行するCLIツールを作ればいいんじゃないか、ということで作ったのが<a href="http://github.com/niku4i/naginata">Naginata</a>です。複数監視対象を複数nagiosサーバ横断的に通知OFFにしたりすることが1コマンドで出来るツールになってます。</p>

<h3>使い方</h3>

<h4>インストール</h4>

<p>SSH接続元となるホストにnaginataをインストールします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install naginata</span></code></pre></td></tr></table></div></figure>


<p><code>naginata</code>コマンドがインストールされるので、以下のように設定ファイルを作ります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ naginata init</span></code></pre></td></tr></table></div></figure>


<p>カレントディレクトリにNaginatafileというのが出来ます。管理対象のnagiosサーバを書いてください。</p>

<p>以下設定例です</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 管理対象のnagiosサーバを書く
</span><span class='line'># ログイン先のユーザ名が異なる場合はfoo@のようにユーザ名も指定する
</span><span class='line'>nagios_server 'foo@nagios1.example.com'
</span><span class='line'>nagios_server 'bar@nagios2.example.com'
</span><span class='line'>nagios_server 'baz@nagios3.example.com'
</span><span class='line'>
</span><span class='line'># Global nagios server options 
</span><span class='line'># nagios_serverのファイルパスを指定する
</span><span class='line'># またrun_command_as: には nagios.cmd に書き込む時の
</span><span class='line'># ユーザ名を指定する
</span><span class='line'>set :nagios_server_options, {
</span><span class='line'>  command_file: '/usr/local/nagios/var/rw/nagios.cmd',
</span><span class='line'>  status_file: '/usr/local/nagios/var/status.cmd',
</span><span class='line'>  run_command_as: 'nagios',
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># Global SSH options
</span><span class='line'># SSHの秘密鍵を指定する
</span><span class='line'>set :ssh_options, {
</span><span class='line'>  keys: %w(/home/nikushi/.ssh/id_rsa),
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'># nagiosサーバでsudoするのでpty trueにしておく
</span><span class='line'>set :pty, true</span></code></pre></td></tr></table></div></figure>


<p>セットアップは以上です。nagiosサーバ側にはrubyやnaginataをインストールする必要はありません。</p>

<h4>通知を止める,有効にする</h4>

<p>例として全nagiosサーバ上の全ホストのPINGとSSHの監視の通知を止めてみます。動作を確かめるため<code>-v (--verbose)</code>オプションを付けて実行してます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">naginata</span> <span class="n">notification</span> <span class="o">--</span><span class="n">all</span><span class="o">-</span><span class="n">hosts</span>  <span class="o">--</span><span class="n">disable</span>  <span class="o">--</span><span class="n">services</span> <span class="no">PING</span><span class="p">,</span><span class="no">SSH</span> <span class="o">-</span><span class="n">v</span>
</span><span class='line'><span class="o">.</span><span class="n">.snip</span><span class="o">.</span><span class="n">.</span>
</span><span class='line'><span class="no">Following</span> <span class="n">notifications</span> <span class="n">will</span> <span class="n">be</span> <span class="n">disabled</span>
</span><span class='line'><span class="n">localhost</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">PING</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">SSH</span>
</span><span class='line'><span class="n">redis01</span><span class="o">.</span><span class="n">tokyo</span><span class="o">.</span><span class="n">local</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">PING</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">SSH</span>
</span><span class='line'><span class="n">web01</span><span class="o">.</span><span class="n">tokyo</span><span class="o">.</span><span class="n">local</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">PING</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">SSH</span>
</span><span class='line'><span class="n">localhost</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">PING</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">SSH</span>
</span><span class='line'><span class="n">redis01</span><span class="o">.</span><span class="n">osaka</span><span class="o">.</span><span class="n">local</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">PING</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">SSH</span>
</span><span class='line'><span class="n">web01</span><span class="o">.</span><span class="n">osaka</span><span class="o">.</span><span class="n">local</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">PING</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">SSH</span>
</span><span class='line'><span class="no">Are</span> <span class="n">you</span> <span class="n">sure?</span> <span class="o">[</span><span class="n">y</span><span class="o">|</span><span class="n">N</span><span class="o">]</span> <span class="n">y</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">71871262</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;localhost;PING&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios1</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">48</span><span class="n">a76239</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;localhost;PING&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios0</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">71871262</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">017</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="n">ef4827b7</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;localhost;SSH&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios1</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">48</span><span class="n">a76239</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">017</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">4</span><span class="n">ffe6eb6</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;localhost;SSH&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios0</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="n">ef4827b7</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">021</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">7</span><span class="n">ee77545</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;redis01.osaka.local;PING&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios1</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">4</span><span class="n">ffe6eb6</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">022</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">2</span><span class="n">ef43042</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;redis01.tokyo.local;PING&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios0</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">2</span><span class="n">ef43042</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">017</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">13</span><span class="n">b54c30</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;redis01.tokyo.local;SSH&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios0</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">7</span><span class="n">ee77545</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">022</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="n">de883201</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;redis01.osaka.local;SSH&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios1</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">13</span><span class="n">b54c30</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">01</span><span class="mi">8</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">13</span><span class="n">f9ce6c</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;web01.tokyo.local;PING&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios0</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="n">de883201</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">017</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">5458</span><span class="n">ec38</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;web01.osaka.local;PING&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios1</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">13</span><span class="n">f9ce6c</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">023</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">5458</span><span class="n">ec38</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">021</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="n">be16e918</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;web01.tokyo.local;SSH&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios0</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">6247</span><span class="n">dc33</span><span class="o">]</span> <span class="no">Running</span> <span class="sr">/usr/</span><span class="n">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">echo</span> <span class="s2">&quot;[1428296330] DISABLE_SVC_NOTIFICATIONS;web01.osaka.local;SSH&quot;</span> <span class="o">&gt;</span> <span class="sr">/var/s</span><span class="n">pool</span><span class="o">/</span><span class="n">nagios</span><span class="o">/</span><span class="n">cmd</span><span class="o">/</span><span class="n">nagios</span><span class="o">.</span><span class="n">cmd</span> <span class="n">on</span> <span class="n">nagios1</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="n">be16e918</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">020</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">INFO</span> <span class="o">[</span><span class="mi">6247</span><span class="n">dc33</span><span class="o">]</span> <span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">021</span> <span class="n">seconds</span> <span class="n">with</span> <span class="nb">exit</span> <span class="n">status</span> <span class="mi">0</span> <span class="p">(</span><span class="n">successful</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'><span class="no">Done</span>
</span></code></pre></td></tr></table></div></figure>


<p>なお、naginataは強力なフィルタ機能を持っています。上の例は全ホスト対象にしましたが引数にホスト名を指定すると対象ホストを限定できます。</p>

<p>また、ホスト名やサービス名は部分一致の挙動のため一部だけ指定することもできます。grepコマンドの引数のイメージです。また複数指定も出来ます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">naginata</span> <span class="n">notification</span> <span class="n">osaka</span><span class="o">.</span><span class="n">local</span> <span class="n">tokyo</span> <span class="o">--</span><span class="n">enable</span> <span class="o">--</span><span class="n">services</span> <span class="no">Lo</span><span class="p">,</span><span class="no">PI</span>
</span><span class='line'><span class="no">Following</span> <span class="n">notifications</span> <span class="n">will</span> <span class="n">be</span> <span class="n">enabled</span>
</span><span class='line'><span class="n">redis01</span><span class="o">.</span><span class="n">tokyo</span><span class="o">.</span><span class="n">local</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">Load</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">PING</span>
</span><span class='line'><span class="n">web01</span><span class="o">.</span><span class="n">tokyo</span><span class="o">.</span><span class="n">local</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">Load</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">PING</span>
</span><span class='line'><span class="n">redis01</span><span class="o">.</span><span class="n">osaka</span><span class="o">.</span><span class="n">local</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">Load</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">PING</span>
</span><span class='line'><span class="n">web01</span><span class="o">.</span><span class="n">osaka</span><span class="o">.</span><span class="n">local</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">Load</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">PING</span>
</span><span class='line'><span class="no">Are</span> <span class="n">you</span> <span class="n">sure?</span> <span class="o">[</span><span class="n">y</span><span class="o">|</span><span class="n">N</span><span class="o">]</span> <span class="n">y</span>
</span><span class='line'><span class="no">Done</span>
</span></code></pre></td></tr></table></div></figure>


<p>正規表現もできる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">naginata</span> <span class="n">notification</span> <span class="o">^</span><span class="n">web</span>  <span class="o">--</span><span class="n">enable</span> <span class="o">--</span><span class="n">services</span> <span class="s1">&#39;d$&#39;</span>
</span><span class='line'><span class="no">Following</span> <span class="n">notifications</span> <span class="n">will</span> <span class="n">be</span> <span class="n">enabled</span>
</span><span class='line'><span class="n">web01</span><span class="o">.</span><span class="n">tokyo</span><span class="o">.</span><span class="n">local</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">Load</span>
</span><span class='line'><span class="n">web01</span><span class="o">.</span><span class="n">osaka</span><span class="o">.</span><span class="n">local</span>
</span><span class='line'>  <span class="o">-</span> <span class="no">Load</span>
</span><span class='line'><span class="no">Are</span> <span class="n">you</span> <span class="n">sure?</span> <span class="o">[</span><span class="n">y</span><span class="o">|</span><span class="n">N</span><span class="o">]</span> <span class="n">y</span>
</span><span class='line'><span class="no">Done</span>
</span></code></pre></td></tr></table></div></figure>


<p>また、例は割愛しますが<code>--nagios</code>オプションで対象nagiosサーバを限定できます。</p>

<h4>ステータス確認</h4>

<p>元々External Command実行フレームワークにする作りをしていましたが、作っていく途中で監視ステータスや通知OFFされているかどうかを確認出来た方がいいなということになって作ってみました。</p>

<p>以下の例ではサービス一覧を複数Nagiosサーバから取得して現在の状態を表示してます。便利、でしょうか?。こちらも上述のフィルタが使えます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">naginata</span> <span class="n">services</span> <span class="o">-</span><span class="n">a</span>
</span><span class='line'><span class="no">NAGIOS</span>   <span class="no">HOST</span>                 <span class="no">SERVICE</span>          <span class="no">STATUS</span>   <span class="no">FLAGS</span>  <span class="no">OUTPUT</span>
</span><span class='line'><span class="n">nagios0</span>  <span class="n">localhost</span>            <span class="no">HTTP</span>             <span class="no">WARNING</span>  <span class="no">AC</span><span class="p">,</span><span class="n">nt</span>  <span class="no">HTTP</span> <span class="ss">WARNING</span><span class="p">:</span> <span class="no">HTTP</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span> <span class="mi">403</span> <span class="no">Forbidden</span> <span class="o">-</span> <span class="mi">5152</span> <span class="n">bytes</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">001</span> <span class="n">second</span> <span class="n">response</span> <span class="n">time</span>
</span><span class='line'><span class="n">nagios0</span>  <span class="n">localhost</span>            <span class="no">Current</span> <span class="no">Load</span>     <span class="no">OK</span>       <span class="no">AC</span><span class="p">,</span><span class="no">NT</span>  <span class="no">OK</span> <span class="o">-</span> <span class="nb">load</span> <span class="ss">average</span><span class="p">:</span> <span class="mi">0</span><span class="o">.</span><span class="mo">00</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mo">00</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mo">00</span>
</span><span class='line'><span class="n">nagios0</span>  <span class="n">localhost</span>            <span class="no">PING</span>             <span class="no">OK</span>       <span class="no">AC</span><span class="p">,</span><span class="no">NT</span>  <span class="no">PING</span> <span class="no">OK</span> <span class="o">-</span> <span class="no">Packet</span> <span class="n">loss</span> <span class="o">=</span> <span class="mi">0</span><span class="sx">%, RTA = 0.04 ms</span>
</span><span class='line'><span class="sx">nagios0  redis01.tokyo.local  Load             CRITICAL AC,</span><span class="no">NT</span>  <span class="no">Too</span> <span class="n">high</span> <span class="nb">load</span> <span class="n">average</span> <span class="mi">15</span>
</span><span class='line'><span class="n">nagios0</span>  <span class="n">redis01</span><span class="o">.</span><span class="n">tokyo</span><span class="o">.</span><span class="n">local</span>  <span class="no">PING</span>             <span class="no">OK</span>       <span class="n">ac</span><span class="p">,</span><span class="no">NT</span>  <span class="no">PING</span> <span class="no">OK</span> <span class="o">-</span> <span class="no">Packet</span> <span class="n">loss</span> <span class="o">=</span> <span class="mi">0</span><span class="sx">%, RTA = 0.04 ms</span>
</span><span class='line'><span class="sx">nagios0  redis01.tokyo.local  SSH              OK       AC,</span><span class="no">NT</span>  <span class="no">SSH</span> <span class="no">OK</span> <span class="o">-</span> <span class="no">OpenSSH_5</span><span class="o">.</span><span class="mi">3</span> <span class="p">(</span><span class="n">protocol</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="n">nagios0</span>  <span class="n">web01</span><span class="o">.</span><span class="n">tokyo</span><span class="o">.</span><span class="n">local</span>    <span class="no">Load</span>             <span class="no">OK</span>       <span class="no">AC</span><span class="p">,</span><span class="no">NT</span>  <span class="no">OK</span> <span class="o">-</span> <span class="nb">load</span> <span class="ss">average</span><span class="p">:</span> <span class="mi">0</span><span class="o">.</span><span class="mo">01</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mo">00</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mo">00</span>
</span><span class='line'><span class="n">nagios0</span>  <span class="n">web01</span><span class="o">.</span><span class="n">tokyo</span><span class="o">.</span><span class="n">local</span>    <span class="no">PING</span>             <span class="no">OK</span>       <span class="no">AC</span><span class="p">,</span><span class="no">NT</span>  <span class="no">PING</span> <span class="no">OK</span> <span class="o">-</span> <span class="no">Packet</span> <span class="n">loss</span> <span class="o">=</span> <span class="mi">0</span><span class="sx">%, RTA = 0.04 ms</span>
</span><span class='line'><span class="sx">nagios0  web01.tokyo.local    SSH              OK       AC,</span><span class="no">NT</span>  <span class="no">SSH</span> <span class="no">OK</span> <span class="o">-</span> <span class="no">OpenSSH_5</span><span class="o">.</span><span class="mi">3</span> <span class="p">(</span><span class="n">protocol</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="n">nagios1</span>  <span class="n">redis01</span><span class="o">.</span><span class="n">osaka</span><span class="o">.</span><span class="n">local</span>  <span class="no">Load</span>             <span class="no">OK</span>       <span class="no">AC</span><span class="p">,</span><span class="no">NT</span>  <span class="no">OK</span> <span class="o">-</span> <span class="nb">load</span> <span class="ss">average</span><span class="p">:</span> <span class="mi">0</span><span class="o">.</span><span class="mo">00</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mo">00</span><span class="p">,</span> <span class="mi">0</span><span class="o">.</span><span class="mo">00</span>
</span><span class='line'><span class="n">nagios1</span>  <span class="n">redis01</span><span class="o">.</span><span class="n">osaka</span><span class="o">.</span><span class="n">local</span>  <span class="no">PING</span>             <span class="no">OK</span>       <span class="no">AC</span><span class="p">,</span><span class="no">NT</span>  <span class="no">PING</span> <span class="no">OK</span> <span class="o">-</span> <span class="no">Packet</span> <span class="n">loss</span> <span class="o">=</span> <span class="mi">0</span><span class="sx">%, RTA = 0.04 ms</span>
</span><span class='line'><span class="sx">nagios1  redis01.osaka.local  SSH              OK       AC,</span><span class="no">NT</span>  <span class="no">SSH</span> <span class="no">OK</span> <span class="o">-</span> <span class="no">OpenSSH_5</span><span class="o">.</span><span class="mi">3</span> <span class="p">(</span><span class="n">protocol</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>FLAGSという列に見慣れぬ文字列が入ってますが</p>

<ul>
<li>AC = Active Check enabled</li>
<li>ac = active check disabled</li>
<li>NT = NoTification disabled</li>
<li>nt = notification disabled</li>
</ul>


<p>という意味になってます。</p>

<h3>制約など</h3>

<ul>
<li>nagiosサーバにはSSHでパスフレーズ無しでログインできる前提です</li>
<li>SSHログイン後nagios.cmdに書き込める権限があるユーザか、もしくはSSHログイン後にsudoできるユーザ必要があります</li>
</ul>


<h3>その他</h3>

<p><a href="https://github.com/niku4i/naginata/tree/master/integration-test">naginata/tree/master/integration-test</a>にVagrantファイルとサンプルの設定ファイルを置いてるのでVagrantがインストールされたMacがあれば動作をお手軽に試せます。vagrant upすると仮想マシンにnagiosをインストールした状態で上がってきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gem</span> <span class="n">install</span> <span class="n">naginata</span>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="nb">clone</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">niku4i</span><span class="o">/</span><span class="n">naginata</span><span class="o">.</span><span class="n">git</span>
</span><span class='line'><span class="err">$</span> <span class="n">cd</span> <span class="n">naginata</span><span class="o">/</span><span class="n">integration</span><span class="o">-</span><span class="nb">test</span>
</span><span class='line'><span class="err">$</span> <span class="n">vagrant</span> <span class="n">up</span>
</span></code></pre></td></tr></table></div></figure>


<p>つづいて/etc/hostsに以下2行を追記する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">127</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span>       <span class="n">nagios0</span>
</span><span class='line'><span class="mi">127</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span>       <span class="n">nagios1</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで動作確認できるとおもいます!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">naginata</span> <span class="n">services</span> <span class="o">-</span><span class="n">a</span>
</span></code></pre></td></tr></table></div></figure>


<p>また <a href="http://localhost:8880">http://localhost:8880</a> , <a href="http://localhost:8881">http://localhost:8881</a> で仮想マシン側のnagios画面見れます。</p>

<h3>ToDo</h3>

<ul>
<li>現状notificationのon/offのみ対応。その他のコマンドへの対応。</li>
<li>ステータスに色を付ける</li>
<li>高速化。現状サービス数、nagiosサーバ数が多くなるとそれなりに遅い。</li>
</ul>


<h3>まとめ</h3>

<p><a href="http://github.com/niku4i/naginata">Naginata</a>という複数NagiosをSSH経由で操作するCLIツールを作った。</p>

<p>ぜひ使ってみてください!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vimとTerminal.appのカラースキーマをsolarizedにする]]></title>
    <link href="http://orihubon.com/blog/2014/12/21/solarized-colorscheme/"/>
    <updated>2014-12-21T21:03:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/12/21/solarized-colorscheme</id>
    <content type="html"><![CDATA[<p><a href="http://ethanschoonover.com/solarized">solarized</a>というカラースキームが良いらしいのでvimとターミナルの配色を変えた。</p>

<!--more-->


<p><a href="https://github.com/altercation/vim-colors-solarized">vim用のカラースキーマ</a>と、<a href="https://github.com/tomislav/osx-terminal.app-colors-solarized">Terminal.app用のsolarized profile</a>をインストールにして有効にしたら出来た。</p>

<p>なお、Terminal.appのフォントは以前から使っている<a href="https://store1.adobe.com/cfusion/store/html/index.cfm?store=OLS-JP&amp;event=displayFontPackage&amp;code=1960">Source Code Pro</a>を引き続き使うことにした。</p>

<h3>Before</h3>

<p><img src="http://orihubon.com/images/2014-12-21-solarized-before.png"></p>

<h3>After</h3>

<p><img src="http://orihubon.com/images/2014-12-21-solarized-after.png"></p>

<p>良し悪しは分からないが以前よりコントラストが下って目にやさしいような気がするのでしばらく使ってみてみる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[センス入門 を読んだ]]></title>
    <link href="http://orihubon.com/blog/2014/12/07/sensu-nyumon/"/>
    <updated>2014-12-07T22:10:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/12/07/sensu-nyumon</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/%E3%82%BB%E3%83%B3%E3%82%B9%E5%85%A5%E9%96%80-%E6%9D%BE%E6%B5%A6-%E5%BC%A5%E5%A4%AA%E9%83%8E/dp/4480816720">センス入門 松浦 弥太郎  (著)</a> という本を読んだ。</p>

<!--more-->


<h2>読んだきっかけ</h2>

<p>奥さんが休日出勤で家にいなくて、僕も予定がなかった先週末、ふらっと出かけた<a href="http://www.nact.jp/">国立新美術館</a>のショップでこの本を見つけて購入した。最近、視野とか考えが狭まってると感じることがあって、柔らかくなればいいな、というくらいの気持ちで手に取ったんじゃないかなきっと。</p>

<h2>どんな本だったか</h2>

<p>よいなとおもった目次をメモしておく</p>

<ul>
<li>心を開く事がセンスのよさへの最初の一歩</li>
<li>すすめられたことは試してみる</li>
<li>なんでも知っている人よりも、なんでも考える人になった方がいい</li>
</ul>


<p>クールにするだけだと心に何も残らないかもしれない。感動した体験は忘れないし、心を開いて人と話すとその人の記憶にもあなたの印象がとどまる。</p>

<p>すすめられたことは試してみる。これも心を開くこと近い。人がこれは良いよと言ってすすめてくれたものを素直に試してみるとよいとある。例えば、この本良いと言われたらとりあえず読んでみるとか、このレストラン美味しかったと言われたら行ってみるとか。時には自分には良くない合わなかったこともあるだろうが、経験が糧となってセンスになる、とのことらしい。自分はインターネットのレビューとか口コミサイトの点数とか定量的な尺度の情報を信頼する傾向にあったのだけど、今度何かすすめられた素直な気持ちで試してみたい。</p>

<p>考えるということは案外大変。筆者は考えるトレーニングを毎日1時間x2回やっている。とくに朝の1時間は集中力があるのでおすすめとのことだった。</p>

<h2>センスを磨く</h2>

<p>本物を見る、聴くなど体験すべしと書いてある。例えば美術館とか重要文化財とか。また歴史上の偉人から学ぶことも良いらしい。他にもセンスがいいなこの人という人がいたらその人のやっていることを真似てみるといいとある。</p>

<p>こういうことは洋服や美術、音楽だけに限らず自分の周りの環境にも当てはまるとおもった。エンジニアであれば優秀なエンジニアのコードを読むとか、ライブコーディングを見たり生で見たりするだけでも勉強になる。コードの写経とかも。</p>

<h2>おわりに</h2>

<p>センス入門を読んだ。</p>

<p>週末に美術館というのは頭の体操になって良いと自分はおもった。この日はチューリッヒ美術館展という企画があり印象派からシェルレアリズムまで幅広い年代のコレクションが凝縮されたお得な展示で、普段そんなに美術館に行かない自分としてはとても満足度高かった。ただ、人は多すぎだったので東京で人気の美術館巡る時は平日だなという教訓も得た。今度はこの本でもおすすめされているとおり私設の美術館を巡ってみたい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git pushのトピックブランチ名を省略する方法]]></title>
    <link href="http://orihubon.com/blog/2014/11/11/shortcut-to-push-origin-topicbranch/"/>
    <updated>2014-11-11T11:22:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/11/11/shortcut-to-push-origin-topicbranch</id>
    <content type="html"><![CDATA[<p>トピックブランチを完成させたあと <code>git push origin myfix</code> と毎度タイプしてたけどタイプがしんどいので省略する方法を調べた。</p>

<!--more-->


<p><a href="http://qiita.com/tkengo/items/5bae50fb7531d5a6bbcf">gitでカレントブランチをpushする</a> を参考に自分は以下のように <code>~/.gitconfig</code> を書いた。</p>

<figure class='code'><figcaption><span>~/.gitconfig</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>[alias]
</span><span class='line'>  cb             = rev-parse --abbrev-ref HEAD
</span><span class='line'>  current-branch = rev-parse --abbrev-ref HEAD
</span><span class='line'>  pcb            = !git push origin `git rev-parse --abbrev-ref HEAD`
</span></code></pre></td></tr></table></div></figure>


<p>自分は <code>git</code> を <code>g</code> にaliasしているので、<code>g pcb</code> で カレントブランチを origin に push できるようになった。また<code>git cb</code> or <code>git current-branch</code> はカレントブランチの名前を表示するショートカット。</p>

<p>これでまた少しタイプ数を減らせた。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pushd and popd]]></title>
    <link href="http://orihubon.com/blog/2014/11/10/pushd-and-popd/"/>
    <updated>2014-11-10T22:42:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/11/10/pushd-and-popd</id>
    <content type="html"><![CDATA[<p>pushd と popd を使い始めた。</p>

<!--more-->


<p>ほんとうに今更感があるが。学生の時に知っていつの間にか使わなくなり、社会人数年目で再度使うようにして使わなくなってしまった歴史が個人的にある。</p>

<p>使わなくなってしまった理由はタイプ数だと考えているので、タイプ数を少なくすべく以下のようにした。Dan Kogai氏の<a href="http://blog.livedoor.jp/dankogai/archives/51527066.html">tips &ndash; 君はpushd|popdを知っているか?</a>を参考にさせていただいた。</p>

<figure class='code'><figcaption><span>~/.bashrc</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">function </span>mycd <span class="o">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">[</span> -n <span class="s2">&quot;$1&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">    </span><span class="nb">pushd</span> <span class="nv">$1</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'><span class="k">    </span><span class="nb">pushd</span> ~/
</span><span class='line'>  <span class="k">fi</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nb">alias cd</span><span class="o">=</span>mycd
</span><span class='line'><span class="nb">alias </span><span class="nv">po</span><span class="o">=</span><span class="s1">&#39;popd&#39;</span>
</span><span class='line'><span class="nb">alias  </span><span class="nv">p</span><span class="o">=</span><span class="s1">&#39;popd&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>cd</code> で別ディレクトリに移動すると同時にカレントディレクトリが保存され <code>p</code> で元のディレクトリに戻る。<code>mycd</code> 経由なのは <code>pushd</code> 引数無しでも <code>~/</code> に帰れるようにするため。</p>

<p>今のところいい感じ。しかしこういう小さい改善系はすぐ忘れてしまって残念な感じになるので、小さなネタでもブログに書いておこう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ISUCON4本戦に出場しました!! 悔しい!!]]></title>
    <link href="http://orihubon.com/blog/2014/11/09/isucon4-final/"/>
    <updated>2014-11-09T17:58:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/11/09/isucon4-final</id>
    <content type="html"><![CDATA[<p>週末、<a href="http://isucon.net/archives/cat_1024989.html">ISUCON4本戦</a>に参加しました。</p>

<!--more-->


<p>去年に引き続き2度目となる本戦出場です。メンバは前回同様@sonots, @Spring_MT, GoMiamiというチーム名で参加しました。予選はGoでしたが本戦は慣れてるRubyで戦いました。</p>

<p>お題は動画広告システムのパフォーマンス・チューニング。最初は動画広告とかやったことないしな..とおもいましたが、実質的には数MのファイルのPOST(入稿)とそのファイルのGET(impression, conversion)を中心としたサイト構成でした。</p>

<p>結果は30チーム中17位&hellip;..! 8017点でした。チームの目標が失格にならないことだった点はクリアしたものの、上位に食い込む&hellip;という目標は達成できませんでした。 <a href="http://isucon.net/archives/41187491.html">本戦結果</a>のとおりほとんどのチームが7千から8千点台の中で僅差で並んでて、抜きん出ることは出来きず悔しい感じでした。</p>

<p>今回の問題の本質はベンチが賢い点に気づけるかどうかで、<strong>レスポンスヘッダで適切にキャッシュコントロールさせればベンチサイドでキャッシュが効いて0バイトでレスポンス返すことが出来た</strong>、ということでした、、、、。本戦後の結果発表まで気づけてなくて本当に悔しかったです。ベンチ(!=ブラウザ)という先入観。</p>

<p>事前準備しことはChefレシピを仕込んでおいたくらいです。sshの鍵、/etc/hostsにエイリアス書く、vimrc、各種秘伝のたれ設定(nginx.conf, redis.conf, my.cnf)、nginxアクセスログ等の集計スクリプト等を開始直後にがっとまくやつ。一応各ホスト間もsshとおしたけどこれは大して意味なかった。あとはtd-agentでメトリクスシステム(事前に用意)に飛ばした。chefのお陰で開始20分くらいで環境整えれました。</p>

<p>@Spring_MTと@sonotsで方針ぎめやって、自分は設計に適宜つっこみ入れつつも基本的に2人にお任せしました。自分はnginxをメインに担当しつつ、その他もろもろ。</p>

<p>後半、local benchでは20000以上出る一方でremote benchだと8000程度でこれは何で&hellip;という状況になってその後も策出せず時間切れという感じでした。<strong>なんでremote bench遅いの〜〜</strong> と悩む、というかremote benchでスコア出ないの他チームもqueueして遅くなってるんじゃない!?くらいしか考えが及びませんでした。実は仕様(レギュレーションには無かったものの)というところに気づいてどう帯域を使わないでレスポンス返せるか、という点に考えが及ばなかった。remote bench実行時にネットワーク帯域が頭打ってることは早くから気づいてので悔しい限りです!!!</p>

<p><strong>次回に向けた反省。レギュレーションとコードを腰を据えてじっくり読む余裕。ベンチの挙動とアクセスログに向き合う余裕!!</strong></p>

<p>なお超便利だったのは@mikedaさんの<a href="http://tech.naviplus.co.jp/2014/01/09/tmux%E3%81%A7%E8%A4%87%E6%95%B0%E3%82%B5%E3%83%BC%E3%83%90%E3%81%AE%E5%90%8C%E6%99%82%E3%82%AA%E3%83%9A%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3/">tmuxで複数サーバの同時オペレーション</a>でした。chefなくてもかなり捗ったかも。</p>

<p>悔しさ山盛りですが毎度楽しいイベントです。みんな同じコンテキストでお酒飲みながら盛り上がれる懇親会はいいものです!!</p>

<p>最後にこのような素晴らしいコンテストを開催していただきありがとうございます!! 出題者、関係者のみなさま本当にお疲れ様でした!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[binfiles]]></title>
    <link href="http://orihubon.com/blog/2014/11/06/binfiles/"/>
    <updated>2014-11-06T10:43:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/11/06/binfiles</id>
    <content type="html"><![CDATA[<p><code>~/bin/</code>にあったオレオレスクリプトを<a href="https://github.com/niku4i/binfiles">github.com/niku4i/binfiles</a>で管理するようにした。</p>

<!--more-->


<p>オレオレスクリプトというのはシェルスクリプトやPerlで書いた自分用の小さなスクリプトだ。githubに置くのは主にバックアップ目的だ。なお、中身は大して充実していないことを最初に言い訳しておく。</p>

<p>私の環境では<code>~/bin/</code>に<code>jq</code>とか<code>ghq</code>とかサードパティのバイナリ実行ファイルも同居している状態だったので、<code>~/bin/</code>のオレオレスクリプトは削除して<code>~/src/github.com/niku4i/binfiles/bin</code> を<code>$PATH</code>に追加することにした。</p>

<figure class='code'><figcaption><span>~/.bash_profile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="k">if</span> <span class="o">[</span> -d <span class="s2">&quot;$HOME/src/github.com/niku4i/binfiles/bin&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;$HOME/src/github.com/niku4i/binfiles/bin:$PATH&quot;</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<p>なお、新しいPCでセットアップする場合は、まず<a href="http://orihubon.com/blog/2013/01/06/improve-management-of-your-dot-files-by-homesick-and-github/">ドットファイルをhomesickで復元</a>し、さらに<code>ghq</code>をセットアップした後、<code>ghq get github.com/niku4i/binfiles</code>すればよい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ISUCON 2014 予選の記録 GoMiami]]></title>
    <link href="http://orihubon.com/blog/2014/10/05/isucon-qualify/"/>
    <updated>2014-10-05T19:30:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/10/05/isucon-qualify</id>
    <content type="html"><![CDATA[<p><a href="http://isucon.net/archives/39780986.html">ISUCON4 予選</a>に参加しました。</p>

<!--more-->


<p>去年に引き続き2年目、<a href="http://orihubon.com/blog/2013/10/07/isucon3-yosen/">前年</a>同様 @sonots, @Spring_MT と。チーム名はGoMiamiで。今回もマイアミがすこし関係します!!</p>

<p>Go言語を選択すれば成長しないわけがない!!という意気込みのもとGoでいくことが決定。僕は少し前に<a href="http://go-tour-jp.appspot.com/">A Tour of Go</a> をひと通りやった程度。今回はインフラメインで2人はアプリコードメインに戦略立てるって感じで。</p>

<h3>予選</h3>

<h4>事前準備</h4>

<p>社内で1回前回大会の復習会をやったのと、チームで休日にあつまって前回予選課題を使って予行練習。当日どういう役割でどう動くかみたいなことを練習しました。この予行練習のお陰て今回予選はかなり余裕でました!! @sonots is our brain!</p>

<h4>AM</h4>

<p>午前中はボトルネック探しと、ベンチ特性、方針決めを中心にやった。ので午前中はチューニング作業は無し。</p>

<ul>
<li>開始と同時にメンバ分のインスタンス立ち上げ、本番用インスタンス立ち上げ</li>
<li>本番環境整備(github pull&amp;push環境)</li>
<li>ベンチ1回走らせて、プロファイリング。具体的にはnginxのアクセスログ、slowqueryログ、からベンチの特性分析</li>
<li>コード読んだり、画面見たり、ざっと。</li>
<li>my.cnf, nginx.confを予め用意しておいた内容で置き換え</li>
</ul>


<p>MySQLのCPUが高いのはindexいれるとして、それ以外データベースであまりやることないことが分かって、事前に決めてた通りアプリにオンメモリで乗せる戦略にした。</p>

<p>MySQLは5.5が動いてて、一応5.6に上げる方針にした(けどこれは最終的にはオンメモリ戦略とるのでこの時点で上げる必要性はなかったかなと)</p>

<h4>PM</h4>

<p>飯食べながらさくっとMySQL5.6に上げたところで、じつはアプリのオンメモリ戦略の実装待ちで実はやることが無かった(笑)</p>

<p>アプリがfixしないうちに外を闇雲にチューンしてもはまるだけなので、焦っても仕方ないからこの時間帯はコード眺めたりしつつお茶を濁しておりました。やることないと色々手を動かしたくなるのですが、ここはぐっと押さえて。</p>

<p>アプリの改修が無事に終わって、MySQLのindexチューニングもいれて ここでスコアががくっと上がった。 詳細は<a href="http://blog.livedoor.jp/sonots/archives/40449500.html">sonotsブログ</a>が充実している。</p>

<p>アプリのオンメモリ戦略にてスコア上がった。さらにベンチ負荷上げて試したけどスコア頭打ち。CPU大して使ってないのにスコア上がらなくて。ネットワーク周りかなということで<code>netstat -an | grep TIME_WAIT | wc -l</code> ってやると50kくらいポート使ってたので、以下のチューニングしたらport足りなくなる問題は改善しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>net.ipv4.ip_local_port_range = 10000 64000 
</span><span class='line'>net.ipv4.tcp_tw_recycle=1
</span><span class='line'>net.ipv4.tcp_fin_timeout = 5
</span><span class='line'>net.ipv4.tcp_max_syn_backlog = 1024
</span><span class='line'>net.core.somaxconn = 65535</span></code></pre></td></tr></table></div></figure>


<p>nginx-アプリ間はtcpで通信させててunix socketに変えれば良かったのだけど、martiniでunix socketに変えるやり方が分からなくて、上のチューニングでtcpで回ったのでよしとした。</p>

<p>結果としては最終的に40kあたりのレンジで他チームと横並びで、本戦出場は厳しそう&hellip;な感じですが、結果発表が楽しみです。</p>

<h3>反省</h3>

<p><strong>Chef</strong></p>

<p>予選はミドルウェアとか毎回同じなのでChefレシピ用意しといてインフラ担当が3人分開発環境まで揃えてあげればよかった。今回開発環境は各自お任せだったのでコード読み書きに専念させてあげればよかったなと。</p>

<p><strong>Go</strong></p>

<p>Go力足りてなくて速読できなかった(笑) Spring_MT氏はrubyでコードを把握した後Goをfixしたよと言っていた。なるほど。</p>

<h3>所感</h3>

<ul>
<li>前回大会に比べ今回は余裕をもって想定した力は発揮できたことは進歩</li>
<li>個人的に次週に海外出張控えてて準備等々でISUCON準備できてなかったんですが2人が引っ張ってくれて助かったという感じです。</li>
</ul>


<h4>10/5 UPDATE</h4>

<p><strong>本戦出場決まりました!!!</strong>. 出張終えたら復習&amp;&amp;素振りやります。</p>

<p>というわけでリアルにマイアミ出張いってきます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[週末雨だったのでSerfをさわってみた]]></title>
    <link href="http://orihubon.com/blog/2014/06/29/serf/"/>
    <updated>2014-06-29T21:10:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/06/29/serf</id>
    <content type="html"><![CDATA[<p>最近まで<a href="http://www.serfdom.io/">Serf</a>の意味を波乗りくらいにおもってました。&#8217;農奴&#8217;らしいです。梅雨で週末雨だったのでSerfを触ってみました。</p>

<!--more-->


<p>Vagrantで仮想マシン2台建てて<a href="http://www.serfdom.io/intro/getting-started/install.html">Get Started</a>をもくもくやってみました。</p>

<ul>
<li><p><strong>Membership</strong>: ノード一覧を管理する。管理するといっても中央サーバはいなくて各ノードが自律分散的に他ノードと会話して全ノードを知っている状態になる。ノードのクラスタへの参加、離脱はeventという形でクラスタ内のノードに即時伝搬する。イベントハンドラの機能により各ノードは任意のスクリプトを実行できる。</p></li>
<li><p><strong>Failure detection and recovery</strong>: nodeは他のノードの(コネクティビティ的意味の)failを検知でき、他のノードにも伝える。また自動で再接続を試みる。これもイベントとして伝搬されイベントハンドラによりスクリプト実行可能。</p></li>
<li><p><strong>Custom event propagation</strong>: ノードの参加、離脱、接続失敗以外にもカスタムなイベントをクラスタ内に伝搬できる。例えば、deploy実行を伝搬させたり、設定を伝搬させたり。またQueryを使えばevent handler経由で各ノードの実行結果を受け取ることもできる。</p></li>
</ul>


<p>さわってみた感想としては、インストール楽。<code>serf</code>コマンドをダウンロードして置くだけ。Goの良いとろこ。また学習コストが低くてGet Started読んで試してみれば1, 2時間あればだいたい理解できるとおもいます。</p>

<h4>ユースケース || 参考</h4>

<ul>
<li><a href="http://blog.kentarok.org/entry/2013/10/30/020120">Automatic /etc/hosts management with Serf</a> by <a href="https://twitter.com/kentaro">@kentaro</a> さん</li>
<li><a href="http://blog.glidenote.com/blog/2013/10/30/serf-haproxy/">Serf+HAProxyで作るAutomatic Load Balancer</a> by <a href="https://twitter.com/glidenote">@glidenote</a> さん</li>
<li><a href="http://blog.livedoor.jp/sonots/archives/35397486.html">正月休みだし Serf 触ってみた</a> by <a href="https://twitter.com/sonots">@sonots</a> さん</li>
<li><a href="http://www.slideshare.net/zembutsu/is-the-order-an-automation-of-operation-and-monitoring?qid=493a7731-e373-426d-9cb9-d61821aced17&amp;v=qf1&amp;b=&amp;from_search=4">ご注文は監視自動化ですか?</a> by <a href="https://twitter.com/zembutsu">@zembatsu</a> さん</li>
<li>memcached や redis ノードのクラスタを管理する</li>
<li>deploy(git pullとか)してアプリケーションのrestart</li>
<li>設定の伝搬</li>
</ul>


<h4>まとめ</h4>

<p>やんごとなき事情により<code>/etc/hosts</code>を使っているシステムを知ってて内部DNSサーバなあと考えてたけどSerf + <code>/etc/hosts</code>の組み合わせいいですね!</p>

<p>あと、個人的にはネットワーク機器みたいな箱物のサービスディスカバリに対する最適解が無いので、良いツールが出て来ないものかとおもっている次第なんだけど、ネットワーク機器がLinuxの箱で置き換わればいいのにとおもってます。</p>

<p>簡単に自立分散システム作れて良い時代になったものですね。</p>

<p>以上!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Apps Script カスタムLoggerでログをspreadsheetに書き出す]]></title>
    <link href="http://orihubon.com/blog/2014/06/18/log-to-sheet-by-custom-logger-google-apps-script/"/>
    <updated>2014-06-18T20:05:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/06/18/log-to-sheet-by-custom-logger-google-apps-script</id>
    <content type="html"><![CDATA[<p>Google Apps Scriptの中でLoggerで吐くログをシートに書き出すカスタムLoggerを作ってみた。</p>

<!--more-->


<p>こういうシートができあがる。</p>

<p><img src="http://orihubon.com/images/20140618-mylogger.png"></p>

<p><code>Logger.log()</code>ではなくて恒久的に保存するためのロガーを作る。例えばTriggerで時限式実行するスクリプトのログを保存しておきたいとかの用途。</p>

<p>いつものとおりライブラリ化する。<code>MyLogger</code>という名前で。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">log_sheet_</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">sheet_name</span> <span class="o">=</span> <span class="s1">&#39;log&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">ss</span> <span class="o">=</span> <span class="nx">SpreadsheetApp</span><span class="p">.</span><span class="nx">getActiveSpreadsheet</span><span class="p">();</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">sh</span> <span class="o">=</span> <span class="nx">ss</span><span class="p">.</span><span class="nx">getSheetByName</span><span class="p">(</span><span class="nx">sheet_name</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">sh</span> <span class="o">==</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">active_sh</span> <span class="o">=</span> <span class="nx">ss</span><span class="p">.</span><span class="nx">getActiveSheet</span><span class="p">();</span> <span class="c1">// memorize current active sheet;</span>
</span><span class='line'>    <span class="nx">sheet_num</span> <span class="o">=</span> <span class="nx">ss</span><span class="p">.</span><span class="nx">getSheets</span><span class="p">().</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">sh</span> <span class="o">=</span> <span class="nx">ss</span><span class="p">.</span><span class="nx">insertSheet</span><span class="p">(</span><span class="nx">sheet_name</span><span class="p">,</span> <span class="nx">sheet_num</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">sh</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="s1">&#39;A1:C1&#39;</span><span class="p">).</span><span class="nx">setValues</span><span class="p">([[</span><span class="s1">&#39;timestamp&#39;</span><span class="p">,</span> <span class="s1">&#39;level&#39;</span><span class="p">,</span> <span class="s1">&#39;message&#39;</span><span class="p">]]).</span><span class="nx">setBackground</span><span class="p">(</span><span class="s1">&#39;#cfe2f3&#39;</span><span class="p">).</span><span class="nx">setFontWeight</span><span class="p">(</span><span class="s1">&#39;bold&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">sh</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="s1">&#39;A2:C2&#39;</span><span class="p">).</span><span class="nx">setValues</span><span class="p">([[</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(),</span> <span class="s1">&#39;info&#39;</span><span class="p">,</span> <span class="nx">sheet_name</span> <span class="o">+</span> <span class="s1">&#39; has been created.&#39;</span><span class="p">]]).</span><span class="nx">clearFormat</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// .insertSheet()を呼ぶと&quot;log&quot;シートがアクティブになるので、元々アクティブだったシートにフォーカスを戻す</span>
</span><span class='line'>    <span class="nx">ss</span><span class="p">.</span><span class="nx">setActiveSheet</span><span class="p">(</span><span class="nx">active_sh</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">sh</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">log_</span><span class="p">(</span><span class="nx">level</span><span class="p">,</span> <span class="nx">message</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">sh</span> <span class="o">=</span> <span class="nx">log_sheet_</span><span class="p">();</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">now</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">last_row</span> <span class="o">=</span> <span class="nx">sh</span><span class="p">.</span><span class="nx">getLastRow</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">sh</span><span class="p">.</span><span class="nx">insertRowAfter</span><span class="p">(</span><span class="nx">last_row</span><span class="p">).</span><span class="nx">getRange</span><span class="p">(</span><span class="nx">last_row</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">).</span><span class="nx">setValues</span><span class="p">([[</span><span class="nx">now</span><span class="p">,</span> <span class="nx">level</span><span class="p">,</span> <span class="nx">message</span><span class="p">]]);</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">sh</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">debug</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log_</span><span class="p">(</span><span class="s1">&#39;debug&#39;</span><span class="p">,</span> <span class="nx">message</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">info</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log_</span><span class="p">(</span><span class="s1">&#39;info&#39;</span><span class="p">,</span> <span class="nx">message</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">warn</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log_</span><span class="p">(</span><span class="s1">&#39;warn&#39;</span><span class="p">,</span> <span class="nx">message</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">error</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log_</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="nx">message</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">fatal</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">log_</span><span class="p">(</span><span class="s1">&#39;fatal&#39;</span><span class="p">,</span> <span class="nx">message</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>呼び出す側のプロジェクトでは、先ほど作った<code>MyLogger</code>のプロジェクトキーを登録して、こうやって呼び出す。初回呼び出し時に&#8221;log&#8221;という名前でシートを作成し以降は末尾の行にログが追加される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">MyLogger</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s1">&#39;works!&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Apps Scriptで行データを連想配列として扱う]]></title>
    <link href="http://orihubon.com/blog/2014/06/17/convert-row-array-to-hash-in-google-apps-script/"/>
    <updated>2014-06-17T18:12:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/06/17/convert-row-array-to-hash-in-google-apps-script</id>
    <content type="html"><![CDATA[<p>Goolge Apps Scriptでspreadsheetの各列にアクセスするときに、列番号を指定してアクセスするコードを書いてると列追加するとスクリプトが壊れる。そこで1行目(ヘッダ行)をキーにアクセスするコードをライブラリにまとめてみた。普通なんだけどぐぐっても出てこなかったので。</p>

<!-- more -->


<p>以下をUtilsというプロジェクト名で保存。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* returns keys located at top of spreadsheet </span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* @param {sheet} sh Sheet class</span>
</span><span class='line'><span class="cm">* @return {array} array of keys</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">headerKeys</span><span class="p">(</span><span class="nx">sh</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">sh</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span> <span class="nx">sh</span><span class="p">.</span><span class="nx">getLastColumn</span><span class="p">()).</span><span class="nx">getValues</span><span class="p">()[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">* Convert a row to key-value hash according to keys input parameter</span>
</span><span class='line'><span class="cm">*</span>
</span><span class='line'><span class="cm">* @param {array} array</span>
</span><span class='line'><span class="cm">* @param {array} keys</span>
</span><span class='line'><span class="cm">* @return {array} key-value mapped</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">rowToHash</span><span class="p">(</span><span class="nx">array</span><span class="p">,</span> <span class="nx">keys</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">hash</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>  <span class="nx">array</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">value</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">hash</span><span class="p">[</span><span class="nx">keys</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span> <span class="o">=</span> <span class="nx">value</span><span class="p">;</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">hash</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>参照側のプロジェクトにて、ライブラリ機能を使ってincludeすると以下のようにキーで行配列を扱える。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// 住所録 名前から住所を取得</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">getAddressByFullName</span><span class="p">(</span><span class="nx">fullName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">sh</span> <span class="o">=</span> <span class="nx">SpreadsheetApp</span><span class="p">.</span><span class="nx">getActive</span><span class="p">().</span><span class="nx">getSheetByName</span><span class="p">(</span><span class="s1">&#39;addresses&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">keys</span> <span class="o">=</span> <span class="nx">Utils</span><span class="p">.</span><span class="nx">headerKeys</span><span class="p">(</span><span class="nx">sh</span><span class="p">);</span>                                                       <span class="c1">// ヘッダ行を取得</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">values</span> <span class="o">=</span> <span class="nx">sh</span><span class="p">.</span><span class="nx">getRange</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">sh</span><span class="p">.</span><span class="nx">getLastRow</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nx">sh</span><span class="p">.</span><span class="nx">getLastColumn</span><span class="p">()).</span><span class="nx">getValues</span><span class="p">();</span> <span class="c1">// データ部分(2行目以降)取得</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">values</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">row</span> <span class="o">=</span> <span class="nx">values</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>    <span class="nx">row</span> <span class="o">=</span> <span class="nx">Utils</span><span class="p">.</span><span class="nx">rowToHash</span><span class="p">(</span><span class="nx">row</span><span class="p">,</span> <span class="nx">keys</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nx">row</span><span class="p">[</span><span class="s1">&#39;full_name&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="nx">fullName</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">row</span><span class="p">[</span><span class="s1">&#39;address&#39;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>さあこれで列が追加されても大丈夫。RDBMSだと普通なことGAS何でこんなに大変なの!とか考えたら負けです。</p>

<p>早く卒業したいGASおじさん。つっこみありましたらお手柔らかによろしくお願いします!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[opensslコマンドでSNIな証明書をチェックする]]></title>
    <link href="http://orihubon.com/blog/2014/06/02/openssl-sni/"/>
    <updated>2014-06-02T20:46:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/06/02/openssl-sni</id>
    <content type="html"><![CDATA[<p>あるサーバの証明書のCNをチェックしようとして、opensslコマンドで確認すると想定と違うCNが返ってくる何で! ということが起きて軽くはまってしまった。ブラウザで証明書確認すると問題ない。</p>

<!--more-->


<p>結論としてはサーバ証明書がSNIなやつであれば、<code>-servername</code>を付けるべし。だった。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ openssl s_client -connect test.example.com:443 -servername test.example.com 2&gt;&1 &lt; /dev/null </span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Apps Scriptを速くするためのベストプラクティス]]></title>
    <link href="http://orihubon.com/blog/2014/05/30/best-practices-of-google-apps-script/"/>
    <updated>2014-05-30T18:23:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/05/30/best-practices-of-google-apps-script</id>
    <content type="html"><![CDATA[<p>Google Developersサイトの<a href="https://developers.google.com/apps-script/best_practices?hl=ja">Best Practices</a>を要約してみた。</p>

<!--more-->


<h3>サービスのcallを最小限に</h3>

<p>javascript内で閉じた処理の方がサービスをcallするよりも早い。サービスのcallとはspreadsheetのデータを読み出したり書き出したり、Docsを参照したり、SiteやTranslateやUrlFetchとか使ったり。</p>

<h3>バッチオペレーション</h3>

<p>spreadsheetのreadとwriteの回数を最小化する。readとwriteは重い処理。1オペレーションでデータを配列にreadし、1オペレーションで配列にwriteすること。forreachの中で毎回callするのは遅いので、配列に溜めて最後に1回で書きだす。たとえば<code>setBackgroundColor(value)</code>をたくさん呼ぶのではなく<code>setBackgroundColors(values);</code>1回にする。</p>

<h3>Cache Class</h3>

<p><a href="https://developers.google.com/apps-script/reference/cache/cache?hl=ja">Cache</a>というキャッシュクラスがあるので、頻繁に使うけど遅いデータはキャッシュしとく。key valueでキャッシュできる。</p>

<p>例</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function getRssFeed() {
</span><span class='line'>   var cache = CacheService.getPublicCache();
</span><span class='line'>   var cached = cache.get("rss-feed-contents");
</span><span class='line'>   if (cached != null) {
</span><span class='line'>     return cached;
</span><span class='line'>   }
</span><span class='line'>   var result = UrlFetchApp.fetch("http://example.com/my-slow-rss-feed.xml"); // takes 20 seconds
</span><span class='line'>   var contents = result.getContentText();
</span><span class='line'>   cache.put("rss-feed-contents", contents, 1500); // cache for 25 minutes
</span><span class='line'>   return contents;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>Using Client Handlers for More Responsive UIs</h3>

<p>UI applicationを使う場合でイベントコールバック(たとえばボタンをクリックするとか)を使う場合、<a href="https://developers.google.com/apps-script/reference/ui/client-handler?hl=ja">ClientHandler</a>を使うと高速化できる。サーバサイドでイベントキャッチするのではなく、クライアントサイド(ブラウザ)でhandleすることができるので。使う機会がいまのところ無いので詳しくはない。</p>

<p>以上!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Apps Scriptの共通関数をライブラリでまとめる]]></title>
    <link href="http://orihubon.com/blog/2014/05/30/google-apps-script-library/"/>
    <updated>2014-05-30T14:53:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/05/30/google-apps-script-library</id>
    <content type="html"><![CDATA[<p><a href="http://orihubon.com/blog/2014/05/30/tried-google-apps-script/">前回</a>に引き続きGoogle Apps Script。共通関数をライブラリにする方法。</p>

<!--more-->


<p>共通の処理をライブラリとして独立して管理できるのか調査した。Libraryの機能を使うとできることがわかったのでメモ。<a href="https://developers.google.com/apps-script/guide_libraries">公式のドキュメント</a>。</p>

<p>spreadsheet &ndash;> スクリプトエディタ &ndash;> スクリプト作成 の順番でたどるとspreadsheetのバインドされたscriptができあがるが、このスクリプトはライブラリにはできない。ライブラリとして作るにはGoogle Apps Home &ndash;> スクリプト作成する必要がある点が最初分かりにくかった。</p>

<p>ライブラリ作成後、spreadsheetのスクリプトエディタ側でライブラリを指定してあげればOK。実際はライブラリにユニークに割り当てられるproject keyを使う側で指定する。</p>

<h4>イメージ</h4>

<p><img src="http://orihubon.com/images/20140530-script-lib.png"></p>

<h4>最低限必要なこと</h4>

<ul>
<li>利用ユーザへライブラリへのアクセス権限が必要</li>
<li>project keyの伝達が必要</li>
<li>ライブラリスクリプトは1個以上のバージョニングをつけて保存すること(インクルード側でバージョン指定ができる)</li>
</ul>


<h4>その他</h4>

<ul>
<li>インクルードライブラリの識別子(クラス名みたいなもの)は任意の文字列を指定できる。たとえば<code>MyPicasaApi</code>とか。プロジェクト内では<code>MyPicasaApi.doSomething()</code>で呼べる。もし既存のクラス(たとえば<code>UiApp</code>)と被ると既存クラスがオーバライドされる。</li>
<li>privateなメソッドを作るには _ で終わる名前をつけるとautocompleteで出てこなくなる。 e.g. <code>myPrivateMethod_()</code></li>
<li>autocompleteで表示されるドキュメントを与えたいなら、関数の上に<a href="https://developers.google.com/closure/compiler/docs/js-for-compiler">JSDoc style documentation</a>でコメントを書く。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/**
</span><span class='line'>* Raises a number to the given power, and returns the result.
</span><span class='line'>*
</span><span class='line'>* @param {number} base the number we're raising to a power
</span><span class='line'>* @param {number} exp the exponent we're raising the base to
</span><span class='line'>* @return {number} the result of the exponential calculation
</span><span class='line'>*/
</span><span class='line'>function power(base, exp) { ... }</span></code></pre></td></tr></table></div></figure>


<p>GAS力がさらに上がりました!以上!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Apps Scriptをつかってみた]]></title>
    <link href="http://orihubon.com/blog/2014/05/30/tried-google-apps-script/"/>
    <updated>2014-05-30T00:39:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/05/30/tried-google-apps-script</id>
    <content type="html"><![CDATA[<p>某案件でGoogle Spreadsheetを使う機会があって少しかじってみた。浅くメモ。</p>

<!--more-->


<h3>About Google Apps Script</h3>

<p>Google Apps ScriptはGoogleプラットフォーム上で動くサーバサイドjavascript。spreadsheetに限らずGoogle Apps上のデータと連携してアイデア次第で何でもできる言語。例えばGmailでqueryをかけてbodyをパースしてspreadsheetにデータ貯めて、解析してPDF変換してGmailに送る、みたいなこともできる。</p>

<p>Google Apps内に限らず、外部のAPIサーバからデータを取ってきたり、逆に外のサーバにデータを送ることもできる。ただし、Google Platformで実行されるのでファイアウォールを超えてイントラネットに接続するという要件はセキュリティ的に難しい制約はある。</p>

<p>triggerを使うとイベント起因で関数を実行できる。ボタンクリックとかドキュメントを開いたときとか。</p>

<h4>triggerの例</h4>

<p>ドキュメントオープン時にメニューボタンを追加する例。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function onOpen() { // automatically run this on open a spreadsheet.
</span><span class='line'>  var menuEntries = [ {name: "say hello", functionName: "sayHello"} ];
</span><span class='line'>  var ss = SpreadsheetApp.getActiveSpreadsheet();
</span><span class='line'>  ss.addMenu("my menu", menuEntries);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>function sayHello() {
</span><span class='line'>  Logger.log('Hello World!');
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>時限式のtriggerでcron的なことも可能で、もちろんMac Bookを閉じた後もGoogleプラットフォーム上で実行される。triggerを使えば定期的にGmailをチェックして何かやるみたいなこともできる。</p>

<p>書いたスクリプトをWebアプリとして公開する設定をするとURLのエンドポイントがもらえる。triggerには<code>doGet()</code>というのもあってURLをGETしたトリガで何かできたりする。例えばGETトリガでスクリプトへcallbackされるのでURLのqueryのkey, valueをspreadsheetにためるといったこともできる(簡易WebAPI!)</p>

<h3>制約</h3>

<h4>実行遅い</h4>

<p>結構実行遅い。APIのcallを少なくを心がける。ノウハウは <a href="https://developers.google.com/apps-script/best_practices?hl=ja">Best Practices</a>を参照のこと。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>var ss = SpreadsheetApp.getActiveSpreadsheet();
</span><span class='line'>var sh = ss.getSheetByName('シート1');
</span><span class='line'>
</span><span class='line'>//bad
</span><span class='line'>for (n = 0; n &lt; 2; n++) {
</span><span class='line'>    sh.getRange(n,1).setValue('Value');
</span><span class='line'>    sh.getRange(n,2).setValue('Value');
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>//good
</span><span class='line'>sh.getRange(1,1,2,2).setValues([['Value', 'Value'], ['Value', 'Value']]);</span></code></pre></td></tr></table></div></figure>


<h4>1回の実行 5分まで</h4>

<p>実行が5分過ぎるとスクリプトは終了する。</p>

<h3>リファレンス</h3>

<p>自分はこの辺みてます。</p>

<ul>
<li><a href="https://developers.google.com/apps-script/?hl=ja">何はともあれ公式サイト</a></li>
<li><a href="http://stackoverflow.com/questions/tagged/google-apps-script">stackoverflowのtagged/google-apps-script</a> あまり見てないけど</li>
<li>本 僕はいま<a href="http://www.amazon.co.jp/gp/product/B00IM5UW1W/ref=oh_d__o00_details_o00__i00?ie=UTF8&amp;psc=1">Google Apps Script for Biginner</a>を読んでる</li>
</ul>


<p>日本語でヒットするサイトはExcelっぽい雰囲気が漂っててあまり見ていない(笑) もちろん参考にさせていただいているけど。</p>

<h3>おもったところ</h3>

<p>開発環境はブラウザ上のスクリプトエディタを使わざるおえないので、脳がブラウジング脳になるのが難点。viモードほしい。</p>

<p>他のOSSと組み合わせるとアイデア次第で面白いことできそう。<a href="http://qiita.com/kazunori279/items/6329df57635799405547">Fluentd Dashboard</a> のデモはすごかった!</p>

<p>Viewを作らなくていいので楽!</p>

<p>カジュアルに初めてカジュアルに終えるのが良いかと。それなりの規模であればRailsとかで真面目に作ろう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vienna, Salzburg, Zurich, Parisを列車で巡ってみた - 後編]]></title>
    <link href="http://orihubon.com/blog/2014/05/17/zurich-paris/"/>
    <updated>2014-05-17T16:41:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/05/17/zurich-paris</id>
    <content type="html"><![CDATA[<p>ウィーンからパリまで列車の旅の後半編。<a href="http://orihubon.com/blog/2014/05/17/vienna-salzburg/">前半はこちら</a>。</p>

<!-- more -->


<h4>チューリッヒ</h4>

<ul>
<li>物価高い!!!</li>
<li>チェックインでトラブった</li>
<li>チーズフォンデュは濃厚</li>
</ul>


<p>物価高い!!evian 500mlペットボトルが400円強、昼飯2人でパスタとコーラ飲んで5000円弱とかで財布寒い。ホテルもベースが高かったのでチューリッヒではGuest Houseにしました。泊まったGH <a href="http://www.expedia.co.jp/Zurich-Hotels-Guesthouse-Brauerstrasse.h4623034.Hotel-Information">Guesthouse Brauerstrasse</a>。期待していなかったのですが意外、アパートメントタイプでちゃんと専用個室で風呂もトイレも専用。部屋広くてソファもあったりしていい部屋でした。ただしチェックインは難易度高い。フロントは無くてキーボックスからキーを入手する必要があるので事前にキーコードがメールされてきます。僕はキーコードの存在を忘れてて鍵ゲットするまでちょっと手間取りました。</p>

<p>スイスは1泊だけの滞在なのでスイスといえば&hellip;チーズフォンデュでしょってことで食べました。本場はチーズ風味が臭いです。味はおいしかったけど濃厚すぎて自分はダメでした。ちなみに本当は冬の食べ物らしいです。日本の鍋的感覚か。</p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/IMG_5429.JPG">
<img src="http://orihubon.com/images/2014-05-17-honey-moon-log/IMG_5448.JPG"></p>

<h4>パリ</h4>

<ul>
<li>お洒落な街、でも地下鉄とっても汚い</li>
<li>エッフェル塔、凱旋門</li>
<li>ショッピング</li>
</ul>


<p>パリは2泊だけの滞在で駆け足。観光はエッフェル塔、凱旋門、ノートルダム寺院の3カ所。親戚の子供の洋服土産を探したりで町歩きしながらセーヌ川を眺めるそんな感じでした。パリは多人種な街ですね。セーヌ川沿いのBrasserieでワイン飲みながらってのはなかなか良いものでした。</p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/DSC_8903.JPG">
<img src="http://orihubon.com/images/2014-05-17-honey-moon-log/DSC_8936.JPG"></p>

<h4>お金, 手配の方法など</h4>

<p>誰かの参考になるかもしれないので書いてみる。ツアーは使ってなくてすべて個人手配です。</p>

<p>2人で飛行機24万円、列車代が9万円、ホテルが10万くらい、その他食費等で合計55万くらい。飛行機は安かったけどユーロ高め(1ユーロ142円くらい)だったので結構財布寒い感じですね。結構食費は節約系でした。</p>

<p>飛行機はエールフランスのサイトで直接調べたら安く行けることが分かって、さらに安くならないかなとトラベルコちゃんで調べたらHISが同じ便で1万円くらい安かったので申し込み。行きはシャルルドゴール空港経由パリ行き、帰りはパリから成田への直行便です。</p>

<p>ホテルはExpediaで。選定方法はまず値段みて、あとGoogle Mapみながら交通の便が良い立地かどうかで選ぶ感じ。(このあたりネット系でコンシェルジュ的(楽々幹事さん的のり)なサービスあってやってくれるサービスとかないですかねえ。)</p>

<p>列車<a href="http://www.raileurope.com/index.html">RAILEUROPE</a>で列車時刻調べてチケットを事前に購入しました。ユーロレイルパスは使ってません(個別購入の方が安かったので)</p>

<h4>まとめ</h4>

<p>ウィーン、ザルツブルク、チューリッヒ、パリと列車で巡ってきた。弾丸な日程だったけど充実した旅でした。次は1都市滞在でゆっくりした旅がしたい!(けどかなり先だろう)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vienna, Salzburg, Zurich, Parisを列車で巡ってみた - 前編]]></title>
    <link href="http://orihubon.com/blog/2014/05/17/vienna-salzburg/"/>
    <updated>2014-05-17T16:41:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/05/17/vienna-salzburg</id>
    <content type="html"><![CDATA[<p>5月の前半、ウィーンからパリまで列車の旅をしたので簡単にまとめてみます。</p>

<!-- more -->


<p>今回は嫁と二人旅、世間的にはいわゆる新婚旅行というやつです。旅行先の選定は、まず嫁希望でオーストリアのウィーンとザルツブルクが決まって、僕がパリ行ってみたかったのでパリが決まって、列車の旅にしようということが決まって、ウィーンからパリの間でちょうどチューリッヒがあったのでチューリッヒに寄りました。</p>

<h4>ウィーン</h4>

<ul>
<li>音楽の都</li>
<li>オペラ座ツアーオススメ</li>
<li>観光スタートダッシュ</li>
</ul>


<p>僕が大学時代オーケストラやっていて嫁が現在チェロ習い中ということもあって <a href="http://www.musikverein.at/">楽友協会</a> (Wiener Musikverein)へクラシックコンサートききにいきました。黄金ホールが新年のウィーンフィルのニューイヤーコンサートで有名です。日本でクラシックコンサート聞く場合だと結構ジーパン、Tシャツってのもありではありなんですが、さすがヨーロッパ、みなさまお洒落紳士淑女なんですね。僕らは昼間観光した後にいったんホテル戻って綺麗な服に着替えて出かけました。普段クラシック聞かない人でも雰囲気満点で楽しめるとおもいます!</p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/IMG_5300.JPG"></p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/IMG_5306.JPG"></p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/IMG_5319.JPG"></p>

<p>ちなみにチケットは公式ページからクレジットカードで買えます。レシートをA4に印刷して当日会場のチケット預かりで提示すればチケット引き換えできます。</p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/IMG_5303.JPG"></p>

<p>また、昼間にやってるオペラ座ツアーは5ユーロでみれるので安くてお得でオススメです。オペラ座内部をガイドさんが40分くらいかけて案内してくれます。開始時刻は<a href="http://www.wiener-staatsoper.at/Content.Node/home/Startseite-Content.jp.php">公式ページ</a>を参照。予約無しで開始15分くらい前に行って5ユーロ支払えばOKです。</p>

<p>その他、ハプスブルク家関連。ホーフブルク宮殿、シシィ博物館、美術史美術館、シェーンブルン宮殿、と弾丸で巡りました。2日で巡ったのですが時間足りなかった(笑) シェーンブルク宮殿は街から少し離れたところにあって宮殿の裏手に丘があってそウィーンの街の眺めオススメです。</p>

<p>あとグルメ的にはウィーンにいったらウィーナーシュニッチェル、ザッハトルテは食べとけとのことでした。ザッハトルテってHotel Sacher Viennaというところのカフェのチョコケーキだからザッハトルテ(sacher torte)というのは今回知りました。</p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/DSC_8694.JPG"></p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/DSC_8705.JPG"></p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/DSC_8704.JPG"></p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/DSC_8617.JPG"></p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/DSC_8688.JPG"></p>

<h4>ザルツブルク</h4>

<ul>
<li>サウンドオブミュージック</li>
<li>ザルツ = 塩、ブルク = 城。モーツァルトが生まれた街</li>
<li>郊外にはRedBullの本社があるらしい</li>
</ul>


<p>ザルツブルクはけっこう田舎で、市より小さくて村より大きい感じの規模でした。市内観光と併せて郊外まで連れて行ってくれるツアーにjoinするのもオススメです。</p>

<p>嫁が映画サウンドオブミュージックのファンでロケ地を巡る半日ツアーに参加しました。利用したのは現地のツアー会社PANORAMA Toursの<a href="http://www.panoramatours.com/de/salzburg/tour/tour-1a-original-sound-of-music-tour-R-27/">Original Sound of Music Tour</a>、Webサイトから予約できます。英語ガイドさんつきのバスツアーなんですがなかなか陽気なおばちゃんで英語分からないところもありましたが楽しめました。なお、英語ツアーに日本人が参加するのは珍しいらしく参加するともれなくガイドさんイジってくれます(汗) ちなみに、日本語ツアーもあります。</p>

<p><img src="http://orihubon.com/images/2014-05-17-honey-moon-log/IMG_5361.JPG">
<img src="http://orihubon.com/images/2014-05-17-honey-moon-log/DSC_8790.JPG" title="test" >
<img src="http://orihubon.com/images/2014-05-17-honey-moon-log/DSC_8815.JPG"></p>

<h4>列車での移動</h4>

<p>今回はオーストリア国鉄 OBB 運行のRajetというのと、フランス国鉄運行のTGVにのりました。TGVは結構狭い。Rajetは列車内Wifiついてて快適でした!</p>

<p><img class="right" src="http://orihubon.com/images/2014-05-17-honey-moon-log/DSC_8762.JPG">
<img class="right" src="http://orihubon.com/images/2014-05-17-honey-moon-log/IMG_5460.JPG">
<img class="right" src="http://orihubon.com/images/2014-05-17-honey-moon-log/IMG_5398.JPG"></p>

<h4>次回へ続く</h4>

<p>オーストリア編はここで終わり。1ポストで収まらなかったので続きは<a href="http://orihubon.com/blog/2014/05/17/zurich-paris/">次回へ</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[/etc/sysctl.confを管理するChef cookbook]]></title>
    <link href="http://orihubon.com/blog/2014/03/26/sysctl-chef-cookbook/"/>
    <updated>2014-03-26T22:49:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/03/26/sysctl-chef-cookbook</id>
    <content type="html"><![CDATA[<p>Chefでsysctl.confを管理するやつ作ってみた。<a href="https://github.com/niku4i/sysctl-cookbook">niku4i/sysctl-cookbook</a></p>

<!--more-->


<p>なかのコードはonehealth-cookbooksさんの<a href="https://github.com/onehealth-cookbooks/sysctl">onehealth-cookbooks/sysctl</a>から必要最小限必要な部分だけかいつまみました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[test-kitchen使ったメモ]]></title>
    <link href="http://orihubon.com/blog/2014/03/25/test-kitchenshi-tutamemo/"/>
    <updated>2014-03-25T11:46:00+09:00</updated>
    <id>http://orihubon.com/blog/2014/03/25/test-kitchenshi-tutamemo</id>
    <content type="html"><![CDATA[<p>最近はImmutable Infrastracture盛り上がりでChefやPuppetが語られる機会が少なくなって気がしますが、それはChef/Puppetが成熟してきた証拠? test-kitchenを使ってみたメモです。</p>

<!--more-->


<p><a href="http://kitchen.ci/docs/getting-started">GETTING STARTED GUIDE</a> を写経。詳細はリンク先の原文を参照してください。</p>

<p>拙作の<a href="https://github.com/niku4i/rbenv-cookbook">rbenv-cookbook</a>をtest-kitchenをつかってVagrant上の仮想マシンでテストするところまで進めました。なお、Vagrantのバージョンは1.5.1を使いました。</p>

<h3>インストール</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install test-kitchen
</span><span class='line'>$ kitchen -v
</span><span class='line'>Test Kitchen version 1.2.1</span></code></pre></td></tr></table></div></figure>


<p>また、あらかじめcookbookをgit cloneしておきます</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone git@github.com:niku4i/rbenv-cookbook.git
</span><span class='line'>$ cd rbenv-cookbook</span></code></pre></td></tr></table></div></figure>


<h3>kitchen init</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kitchen init --driver=kitchen-vagrant
</span><span class='line'>      create  .kitchen.yml
</span><span class='line'>      create  test/integration/default
</span><span class='line'>      create  .gitignore
</span><span class='line'>      append  .gitignore
</span><span class='line'>      append  .gitignore
</span><span class='line'>         run  gem install kitchen-vagrant from "."
</span><span class='line'>Fetching: kitchen-vagrant-0.14.0.gem (100%)
</span><span class='line'>Successfully installed kitchen-vagrant-0.14.0
</span><span class='line'>Parsing documentation for kitchen-vagrant-0.14.0
</span><span class='line'>Installing ri documentation for kitchen-vagrant-0.14.0
</span><span class='line'>1 gem installed</span></code></pre></td></tr></table></div></figure>


<p>.kitchen.ymlが作られた。中身は以下のとおり。ubuntuはひとまず不要なのでplatformから削除。またinitで作成されたyamlに登録されているcentos-6.4ではkitchen createしたときにvagrant upできなくてエラーになってしまったので、boxイメージが悪いのかなと判断して6.5を使うように変更した。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>driver:
</span><span class='line'>  name: vagrant
</span><span class='line'>
</span><span class='line'>provisioner:
</span><span class='line'>  name: chef_solo
</span><span class='line'>
</span><span class='line'>platforms:
</span><span class='line'>#  - name: ubuntu-12.04
</span><span class='line'>#  - name: centos-6.4
</span><span class='line'>  - name: centos-65
</span><span class='line'>
</span><span class='line'>suites:
</span><span class='line'>  - name: default
</span><span class='line'>    run_list:
</span><span class='line'>      - recipe[rbenv-cookbook::default]
</span><span class='line'>    attributes:</span></code></pre></td></tr></table></div></figure>


<p>kitchen listコマンドで確認できた。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kitchen list
</span><span class='line'>Instance           Driver   Provisioner  Last Action
</span><span class='line'>default-centos-64  Vagrant  ChefSolo     &lt;Not Created&gt;</span></code></pre></td></tr></table></div></figure>


<h3>kitchen create</h3>

<p>kitchen createでインスタンスをアップ</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> $ kitchen create default-centos-65
</span><span class='line'>-----&gt; Starting Kitchen (v1.2.1)
</span><span class='line'>-----&gt; Creating &lt;default-centos-65&gt;...
</span><span class='line'>       Bringing machine 'default' up with 'virtualbox' provider...
</span><span class='line'>       ==&gt; default: Box 'opscode-centos-6.5' could not be found. Attempting to find and install...
</span><span class='line'>           default: Box Provider: virtualbox
</span><span class='line'>           default: Box Version: &gt;= 0
</span><span class='line'>       ==&gt; default: Adding box 'opscode-centos-6.5' (v0) for provider: virtualbox
</span><span class='line'>           default: Downloading: https://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_centos-6.5_chef-provisionerless.box
</span><span class='line'>       ==&gt; default: Successfully added box 'opscode-centos-6.5' (v0) for 'virtualbox'!
</span><span class='line'>       ==&gt; default: Importing base box 'opscode-centos-6.5'...
</span><span class='line'>       ==&gt; default: Matching MAC address for NAT networking...
</span><span class='line'>       ==&gt; default: Setting the name of the VM: default-centos-65_default_1395719095721_73691
</span><span class='line'>       ==&gt; default: Fixed port collision for 22 =&gt; 2222. Now on port 2201.
</span><span class='line'>       ==&gt; default: Clearing any previously set network interfaces...
</span><span class='line'>       ==&gt; default: Preparing network interfaces based on configuration...
</span><span class='line'>           default: Adapter 1: nat
</span><span class='line'>       ==&gt; default: Forwarding ports...
</span><span class='line'>           default: 22 =&gt; 2201 (adapter 1)
</span><span class='line'>       ==&gt; default: Running 'pre-boot' VM customizations...
</span><span class='line'>       ==&gt; default: Booting VM...
</span><span class='line'>==&gt; default: Waiting for machine to boot. This may take a few minutes...           default: SSH address: 127.0.0.1:2201
</span><span class='line'>           default: SSH username: vagrant
</span><span class='line'>           default: SSH auth method: private key
</span><span class='line'>           default: Error: Connection timeout. Retrying...
</span><span class='line'>       ==&gt; default: Machine booted and ready!
</span><span class='line'>       ==&gt; default: Checking for guest additions in VM...
</span><span class='line'>           default: The guest additions on this VM do not match the installed version of
</span><span class='line'>           default: VirtualBox! In most cases this is fine, but in rare cases it can
</span><span class='line'>           default: prevent things such as shared folders from working properly. If you see
</span><span class='line'>           default: shared folder errors, please make sure the guest additions within the
</span><span class='line'>           default: virtual machine match the version of VirtualBox you have installed on
</span><span class='line'>           default: your host and reload your VM.
</span><span class='line'>           default:
</span><span class='line'>           default: Guest Additions Version: 4.3.8
</span><span class='line'>           default: VirtualBox Version: 4.2
</span><span class='line'>       ==&gt; default: Setting hostname...
</span><span class='line'>       Vagrant instance &lt;default-centos-65&gt; created.
</span><span class='line'>       Finished creating &lt;default-centos-65&gt; (11m27.39s).
</span><span class='line'>-----&gt; Kitchen is finished. (11m27.70s)</span></code></pre></td></tr></table></div></figure>


<ul>
<li>vagrantでインスタンスを起動する</li>
<li>boxが登録されてなければネットワークから探してくる</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kitchen list
</span><span class='line'>Instance           Driver   Provisioner  Last Action
</span><span class='line'>default-centos-65  Vagrant  ChefSolo     Created</span></code></pre></td></tr></table></div></figure>


<h3>kitchen converge</h3>

<p>レシピをインスタンスに適用する</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ kitchen converge default-centos-65
</span><span class='line'>-----&gt; Starting Kitchen (v1.2.1)
</span><span class='line'>-----&gt; Converging &lt;default-centos-65&gt;...
</span><span class='line'>       Preparing files for transfer
</span><span class='line'>       Preparing current project directory as a cookbook
</span><span class='line'>       Removing non-cookbook files before transfer
</span><span class='line'>-----&gt; Installing Chef Omnibus (true)
</span><span class='line'>       downloading https://www.getchef.com/chef/install.sh
</span><span class='line'>         to file /tmp/install.sh
</span><span class='line'>       trying wget...
</span><span class='line'>       Downloading Chef  for el...
</span><span class='line'>       downloading https://www.getchef.com/chef/metadata?v=&prerelease=false&p=el&pv=6&m=x86_64
</span><span class='line'>         to file /tmp/install.sh.1851/metadata.txt
</span><span class='line'>       trying wget...
</span><span class='line'>       url      https://opscode-omnibus-packages.s3.amazonaws.com/el/6/x86_64/chef-11.10.4-1.el6.x86_64.rpm
</span><span class='line'>       md5      3fe6dd8e19301b6c66032496a89097db
</span><span class='line'>       sha256   edd5d2bcc174f67e5e5136fd7e5fffd9414c5f4949c68b28055b124185904d9f
</span><span class='line'>       downloaded metadata file looks valid...
</span><span class='line'>       downloading https://opscode-omnibus-packages.s3.amazonaws.com/el/6/x86_64/chef-11.10.4-1.el6.x86_64.rpm
</span><span class='line'>         to file /tmp/install.sh.1851/chef-11.10.4-1.el6.x86_64.rpm
</span><span class='line'>       trying wget...
</span><span class='line'>       Comparing checksum with sha256sum...
</span><span class='line'>       Installing Chef
</span><span class='line'>       installing with rpm...
</span><span class='line'>       warning: /tmp/install.sh.1851/chef-11.10.4-1.el6.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
</span><span class='line'>Preparing...                #####  ########################################### [100%]
</span><span class='line'>   1:chef                          ########################################### [100%]
</span><span class='line'>       Thank you for installing Chef!
</span><span class='line'>       Transfering files to &lt;default-centos-65&gt;
</span><span class='line'>       [2014-03-25T03:51:33+00:00] INFO: Forking chef instance to converge...
</span><span class='line'>       Starting Chef Client, version 11.10.4
</span><span class='line'>       [2014-03-25T03:51:33+00:00] INFO: *** Chef 11.10.4 ***
</span><span class='line'>       [2014-03-25T03:51:33+00:00] INFO: Chef-client pid: 1948
</span><span class='line'>       [2014-03-25T03:51:34+00:00] INFO: Setting the run_list to ["recipe[rbenv-cookbook::default]"] from JSON
</span><span class='line'>       [2014-03-25T03:51:34+00:00] INFO: Run List is [recipe[rbenv-cookbook::default]]
</span><span class='line'>       [2014-03-25T03:51:34+00:00] INFO: Run List expands to [rbenv-cookbook::default]
</span><span class='line'>       [2014-03-25T03:51:34+00:00] INFO: Starting Chef Run for default-centos-65
</span><span class='line'>       [2014-03-25T03:51:34+00:00] INFO: Running start handlers
</span><span class='line'>       [2014-03-25T03:51:34+00:00] INFO: Start handlers complete.
</span><span class='line'>       Compiling Cookbooks...
</span><span class='line'>
</span><span class='line'>       Running handlers:
</span><span class='line'>       [2014-03-25T03:51:34+00:00] ERROR: Running exception handlers
</span><span class='line'>       Running handlers complete
</span><span class='line'>
</span><span class='line'>       [2014-03-25T03:51:34+00:00] ERROR: Exception handlers complete
</span><span class='line'>       [2014-03-25T03:51:34+00:00] FATAL: Stacktrace dumped to /tmp/kitchen/cache/chef-stacktrace.out
</span><span class='line'>       Chef Client failed. 0 resources updated in 0.458583313 seconds
</span><span class='line'>       [2014-03-25T03:51:34+00:00] ERROR: Cookbook yum-epel not found. If you're loading yum-epel from another cookbook, make sure you configure the dependency in your metadata
</span><span class='line'>       [2014-03-25T03:51:34+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
</span><span class='line'>&gt;&gt;&gt;&gt;&gt;&gt; Converge failed on instance &lt;default-centos-65&gt;.
</span><span class='line'>&gt;&gt;&gt;&gt;&gt;&gt; Please see .kitchen/logs/default-centos-65.log for more details
</span><span class='line'>&gt;&gt;&gt;&gt;&gt;&gt; ------Exception-------
</span><span class='line'>&gt;&gt;&gt;&gt;&gt;&gt; Class: Kitchen::ActionFailed
</span><span class='line'>&gt;&gt;&gt;&gt;&gt;&gt; Message: SSH exited (1) for command: [sudo -E chef-solo --config /tmp/kitchen/solo.rb --json-attributes /tmp/kitchen/dna.json  --log_level info]</span></code></pre></td></tr></table></div></figure>


<p>エラーでこけた&hellip; 。rbenv-cookbookはyum-epelに依存してるせい? metadata.rbは既に作ってるのでBerkshelfファイルを作成しmetadataを読み込むようにしたらエラーをパスできた!</p>

<figure class='code'><figcaption><span>Berksfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>source &quot;https://api.berkshelf.com&quot;
</span><span class='line'>
</span><span class='line'>metadata
</span></code></pre></td></tr></table></div></figure>


<p>再実行。gitが無いので止まった。これはレシピが悪い。</p>

<figure class='code'><figcaption><span>recipes/default.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">snip</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="o">+</span> <span class="n">package</span> <span class="s2">&quot;git&quot;</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">snip</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>再実行!無事終了!</p>

<p>kitchen convergeでやること</p>

<ul>
<li>インスタンスにChefをインストール</li>
<li>依存関係のレシピをインストール</li>
<li>.kitchen.ymlのrun_listを実行</li>
</ul>


<h3>手動で確認する</h3>

<p>ここまででレシピをエラー無くインスタンスに適用できることを確認した。手動でログインし確認する。</p>

<figure class='code'><figcaption><span>recipes/default.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">kitchen</span> <span class="n">login</span> <span class="n">default</span><span class="o">-</span><span class="n">centos</span><span class="o">-</span><span class="mi">65</span>
</span><span class='line'><span class="no">Last</span> <span class="ss">login</span><span class="p">:</span> <span class="no">Tue</span> <span class="no">Mar</span> <span class="mi">25</span> <span class="mo">03</span><span class="p">:</span><span class="mi">59</span><span class="p">:</span><span class="mi">38</span> <span class="mi">2014</span> <span class="n">from</span> <span class="mi">10</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">2</span>
</span><span class='line'><span class="o">[</span><span class="n">vagrant</span><span class="vi">@default</span><span class="o">-</span><span class="n">centos</span><span class="o">-</span><span class="mi">65</span> <span class="o">~]</span><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>ログインできた。rbenvインストールされている。</p>

<figure class='code'><figcaption><span>recipes/default.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">rbenv</span>
</span><span class='line'><span class="n">rbenv</span> <span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">-</span><span class="mi">95</span><span class="o">-</span><span class="n">gf71e227</span>
</span><span class='line'><span class="ss">Usage</span><span class="p">:</span> <span class="n">rbenv</span> <span class="o">&lt;</span><span class="n">command</span><span class="o">&gt;</span> <span class="o">[&lt;</span><span class="n">args</span><span class="o">&gt;]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>テストを書く</h3>

<p>ServerSpecを使いたいところではあるが、ここではチュートリアルに従ってBusserというテストフレームワークでテストを書く。</p>

<p>テスト用のディレクトリを作成</p>

<figure class='code'><figcaption><span>recipes/default.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">mkdir</span> <span class="o">-</span><span class="nb">p</span> <span class="nb">test</span><span class="o">/</span><span class="n">integration</span><span class="o">/</span><span class="n">default</span><span class="o">/</span><span class="n">bats</span>
</span></code></pre></td></tr></table></div></figure>


<p>今回は実行ファイルが存在するかどうかだけチェックした。</p>

<figure class='code'><figcaption><span>test/integration/default/bats/rbenv_installed.bats    </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>#!/usr/bin/env bats
</span><span class='line'>
</span><span class='line'>@test &quot;executable rbenv command is found&quot; {
</span><span class='line'>  run test -x /usr/local/rbenv/bin/rbenv
</span><span class='line'>  [ &quot;$status&quot; -eq 0 ]
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>テストを流す</p>

<figure class='code'><figcaption><span>test/integration/default/bats/rbenv_installed.bats    </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ kitchen veryfy default-centos-65
</span><span class='line'>
</span><span class='line'>-----&gt; Starting Kitchen (v1.2.1)
</span><span class='line'>-----&gt; Verifying &lt;default-centos-65&gt;...
</span><span class='line'>       Removing /tmp/busser/suites/bats
</span><span class='line'>       Uploading /tmp/busser/suites/bats/rbenv_installed.bats (mode=0644)
</span><span class='line'>-----&gt; Running bats test suite
</span><span class='line'> ✓ executable rbenv command is found
</span><span class='line'>
</span><span class='line'>       1 test, 0 failures
</span><span class='line'>       Finished verifying &lt;default-centos-65&gt; (0m1.30s).
</span><span class='line'>-----&gt; Kitchen is finished. (0m2.12s)
</span></code></pre></td></tr></table></div></figure>


<h3>kitchen test</h3>

<p>いままでやってきたことを全工程流す。</p>

<figure class='code'><figcaption><span>test/integration/default/bats/rbenv_installed.bats    </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>$ kitchen veryfy default-centos-65
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>既存のインスタンスがあれば廃棄する</li>
<li>インスタンス作成</li>
<li>Chefのインストール</li>
<li>レシピのインストール</li>
<li>テストの実行</li>
<li>インスタンスの廃棄</li>
</ul>


<h3>感想</h3>

<p>test kitchenよい。でも初回遅い。boxが最初ないと更に遅い。この辺はVagrantをDockerに変えるというアプローチがあるとおもうが気軽ではない感じかも。しばらく使ってみる!</p>
]]></content>
  </entry>
  
</feed>
